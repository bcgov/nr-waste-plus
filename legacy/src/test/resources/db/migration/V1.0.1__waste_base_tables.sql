-- DDL Migration for HBS_SCALER_AUTH_KEY (DBeaver style)
-- Table columns
CREATE TABLE HBS_SCALER_AUTH_KEY (
    UPDATE_USERID VARCHAR2(30),
    UPDATE_TIMESTAMP DATE,
    HSAK_ID NUMBER(32,0) NOT NULL,
    USER_ID VARCHAR2(30),
    CLIENT_NUMBER VARCHAR2(8) NOT NULL,
    ENCRYPTED_AUTHENTICATION_KEY RAW(64) NOT NULL,
    EFFECTIVE_DATE DATE NOT NULL,
    EXPIRY_DATE DATE,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE HBS_SCALER_AUTH_KEY ADD CONSTRAINT SYS_C0017854 CHECK (HSAK_ID IS NOT NULL);
ALTER TABLE HBS_SCALER_AUTH_KEY ADD CONSTRAINT SYS_C0017855 CHECK (CLIENT_NUMBER IS NOT NULL);
ALTER TABLE HBS_SCALER_AUTH_KEY ADD CONSTRAINT SYS_C0017856 CHECK (ENCRYPTED_AUTHENTICATION_KEY IS NOT NULL);
ALTER TABLE HBS_SCALER_AUTH_KEY ADD CONSTRAINT SYS_C0017857 CHECK (EFFECTIVE_DATE IS NOT NULL);
ALTER TABLE HBS_SCALER_AUTH_KEY ADD CONSTRAINT SYS_C0017858 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE HBS_SCALER_AUTH_KEY ADD CONSTRAINT SYS_C0017859 CHECK (ENTRY_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE HBS_SCALER_AUTH_KEY ADD CONSTRAINT SAKEHT_PK PRIMARY KEY (HSAK_ID);

-- Unique Indexes
CREATE UNIQUE INDEX SAKEHT_AUTHKEY_UK ON HBS_SCALER_AUTH_KEY (CLIENT_NUMBER, EFFECTIVE_DATE);

-- Non-unique Indexes
CREATE INDEX SAKEHT_HBS_HU_FK_I ON HBS_SCALER_AUTH_KEY (USER_ID);

-- Foreign Keys (commented for later use)
-- DDL Migration for HBS_ENCRYPTION_KEY (DBeaver style)
-- Table columns
CREATE TABLE HBS_ENCRYPTION_KEY (
    HBS_ENCR_KEY_ID NUMBER(2,0) NOT NULL,
    DESCRIPTION VARCHAR2(30) NOT NULL,
    KEYSTORE_ALIAS VARCHAR2(256) NOT NULL,
    HBS_CRYPT_METHOD_ID NUMBER(2,0) NOT NULL,
    EXPIRY_DATE DATE NOT NULL,
    EFFECTIVE_DATE DATE NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30),
    UPDATE_TIMESTAMP DATE
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE HBS_ENCRYPTION_KEY ADD CONSTRAINT SYS_C0017887 CHECK (HBS_ENCR_KEY_ID IS NOT NULL);
ALTER TABLE HBS_ENCRYPTION_KEY ADD CONSTRAINT SYS_C0017888 CHECK (DESCRIPTION IS NOT NULL);
ALTER TABLE HBS_ENCRYPTION_KEY ADD CONSTRAINT SYS_C0017889 CHECK (KEYSTORE_ALIAS IS NOT NULL);
ALTER TABLE HBS_ENCRYPTION_KEY ADD CONSTRAINT SYS_C0017890 CHECK (HBS_CRYPT_METHOD_ID IS NOT NULL);
ALTER TABLE HBS_ENCRYPTION_KEY ADD CONSTRAINT SYS_C0017891 CHECK (EXPIRY_DATE IS NOT NULL);
ALTER TABLE HBS_ENCRYPTION_KEY ADD CONSTRAINT SYS_C0017892 CHECK (EFFECTIVE_DATE IS NOT NULL);
ALTER TABLE HBS_ENCRYPTION_KEY ADD CONSTRAINT SYS_C0017893 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE HBS_ENCRYPTION_KEY ADD CONSTRAINT SYS_C0017894 CHECK (ENTRY_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE HBS_ENCRYPTION_KEY ADD CONSTRAINT HBS_ENCRYPTION_KEY_PK PRIMARY KEY (HBS_ENCR_KEY_ID);

-- Indexes
CREATE INDEX HEK_HCM_FK_I ON HBS_ENCRYPTION_KEY (HBS_CRYPT_METHOD_ID);

-- Foreign Keys (commented for later use)
-- DDL Migration for WASTE_PIECE_HISTORY (DBeaver style)
-- Table columns
CREATE TABLE WASTE_PIECE_HISTORY (
    WASTE_PIECE_ID NUMBER(12,0) NOT NULL,
    WASTE_HISTORY_ID NUMBER(12,0) NOT NULL,
    WASTE_PLOT_ID NUMBER(12,0),
    WASTE_STRATUM_ID NUMBER(12,0),
    WASTE_PIECE_NUMBER NUMBER(3,0) NOT NULL,
    WASTE_MATERIAL_KIND_CODE VARCHAR2(1) NOT NULL,
    WASTE_CLASS_CODE VARCHAR2(1) NOT NULL,
    SCALE_GRADE_CODE VARCHAR2(1) NOT NULL,
    SCALE_PRODUCT_CODE VARCHAR2(2) NOT NULL,
    SCALE_SPECIES_CODE VARCHAR2(2) NOT NULL,
    LENGTH NUMBER(3,0),
    TOP_DIAMETER NUMBER(3,0),
    TOP_END_CODE VARCHAR2(1),
    BUTT_DIAMETER NUMBER(3,0),
    BUTT_END_CODE VARCHAR2(1),
    WASTE_BORDERLINE_CODE VARCHAR2(1),
    LENGTH_DEDUCTION NUMBER(4,1),
    TOP_DEDUCTION NUMBER(3,0),
    BUTT_DEDUCTION NUMBER(3,0),
    WASTE_DECAY_TYPE_CODE VARCHAR2(1),
    WASTE_COMMENT_CODE VARCHAR2(2),
    ESTIMATED_VOLUME NUMBER(8,3),
    ESTIMATED_PERCENT NUMBER(4,1),
    DENSITY_ESTIMATE NUMBER(8,3),
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020621 CHECK (WASTE_PIECE_ID IS NOT NULL);
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020623 CHECK (WASTE_HISTORY_ID IS NOT NULL);
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020625 CHECK (WASTE_PIECE_NUMBER IS NOT NULL);
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020626 CHECK (WASTE_MATERIAL_KIND_CODE IS NOT NULL);
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020627 CHECK (WASTE_CLASS_CODE IS NOT NULL);
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020628 CHECK (SCALE_GRADE_CODE IS NOT NULL);
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020629 CHECK (SCALE_PRODUCT_CODE IS NOT NULL);
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020630 CHECK (SCALE_SPECIES_CODE IS NOT NULL);
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020631 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020632 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020633 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020634 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT SYS_C0020635 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_PIECE_HISTORY ADD CONSTRAINT WPIEH_PK PRIMARY KEY (WASTE_PIECE_ID, WASTE_HISTORY_ID);

-- Unique Indexes
CREATE UNIQUE INDEX WPIEH_PIE_UK1_UK ON WASTE_PIECE_HISTORY (WASTE_STRATUM_ID, WASTE_HISTORY_ID, WASTE_PIECE_ID);
CREATE UNIQUE INDEX WPIEH_PIE_UK_UK ON WASTE_PIECE_HISTORY (WASTE_PLOT_ID, WASTE_HISTORY_ID, WASTE_PIECE_ID);

-- Foreign Keys (commented for later use)-- DDL Migration for WASTE_ASSESSMENT_AREA_HISTORY (DBeaver style)
-- Table columns
CREATE TABLE WASTE_ASSESSMENT_AREA_HISTORY (
    WASTE_FIBRE_RECOVERY_ZONE_RATE VARCHAR2(1),
    OBLIGATION_ADJUSTMENT NUMBER(5,2),
    WASTE_CONDITION_TYPE_CODE VARCHAR2(3),
    WASTE_SITE_TYPE_CODE VARCHAR2(2),
    WASTE_HARVEST_STATUS_CODE VARCHAR2(4),
    WASTE_NET_AREA NUMBER(5,2) NOT NULL,
    MARK_AREA NUMBER(5,2),
    REMAINING_HARVEST_AREA NUMBER(5,2),
    YEAR_LOGGED_FROM NUMBER(4,0),
    YEAR_LOGGED_TO NUMBER(4,0),
    PRIMARY_LOGGING_COMPLETE_DATE DATE,
    ASSESS_STATUS_CHANGE_DATE DATE,
    BENCHMARK_VOLUME NUMBER(2,0),
    WASTE_SURVEYOR_LICENCE VARCHAR2(4),
    RETURN_NUMBER VARCHAR2(4),
    WASTE_ROADS_AREA NUMBER(4,2),
    SURVEY_DATE DATE,
    CRUISE_VOLUME NUMBER(4,0),
    WASTE_ASSESS_AREA_STS_CODE VARCHAR2(4) NOT NULL,
    PARENT_BLOCK_IND VARCHAR2(1) NOT NULL,
    CHILD_BLOCK_IND VARCHAR2(1) NOT NULL,
    MULTI_MARK_IND VARCHAR2(1) NOT NULL,
    WASTE_PARENT_BLOCK_TYPE_CODE VARCHAR2(2),
    DOCUMENT_CONTROL_NUMBER NUMBER(10,0),
    HBS_EDIT_ERR_MESSAGE_CODE VARCHAR2(6),
    HBS_EDIT_ERR_CATEGORY_CODE VARCHAR2(3),
    DRAFT_TIMBER_MARK VARCHAR2(10),
    DRAFT_CUTTING_PERMIT_ID VARCHAR2(3),
    DRAFT_CUT_BLOCK_ID VARCHAR2(10),
    CUTTING_PERMIT_ID VARCHAR2(3),
    CUT_BLOCK_ID VARCHAR2(10),
    WASTE_SURVEY_CHECK_CODE VARCHAR2(3),
    NUMBER_OF_PLOTS_CHECKED NUMBER(3,0),
    WASTE_AREA_RISK_RATING_CODE VARCHAR2(3),
    INVOICE_NOTATION VARCHAR2(80),
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    WASTE_HISTORY_ID NUMBER(12,0) NOT NULL,
    PARENT_WAA_ID NUMBER(12,0),
    REPORTING_UNIT_ID NUMBER(12,0) NOT NULL,
    FOREST_FILE_ID VARCHAR2(10) NOT NULL,
    TIMBER_MARK VARCHAR2(6),
    CB_SKEY NUMBER(10,0),
    WASTE_MATURITY_TYPE_CODE VARCHAR2(8)
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020673 CHECK (WASTE_HISTORY_ID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020674 CHECK (REPORTING_UNIT_ID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020675 CHECK (FOREST_FILE_ID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020676 CHECK (WASTE_NET_AREA IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020677 CHECK (WASTE_ASSESS_AREA_STS_CODE IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020678 CHECK (PARENT_BLOCK_IND IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020679 CHECK (CHILD_BLOCK_IND IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020680 CHECK (MULTI_MARK_IND IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020681 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020682 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020683 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020684 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT SYS_C0020685 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_ASSESSMENT_AREA_HISTORY ADD CONSTRAINT WAAH_PK PRIMARY KEY (WASTE_HISTORY_ID);

-- Indexes

-- Foreign Keys (commented for later use)
-- DDL Migration for SAMPLE_LOG_TALLY (DBeaver style)
-- Table columns
CREATE TABLE SAMPLE_LOG_TALLY (
    DETAIL_DOCUMENT_NUMBER VARCHAR2(13) NOT NULL,
    VERSION NUMBER(2,0) NOT NULL,
    BATDOC_ID NUMBER(32,0),
    SCALE_EVENT_TYPE_CODE VARCHAR2(2) NOT NULL,
    SCL_RTN_VERSION_STATE_CODE VARCHAR2(3) NOT NULL,
    SCALE_DATE DATE NOT NULL,
    SCALE_SITE_ID_NMBR VARCHAR2(4),
    POPULATION_NUMBER VARCHAR2(4),
    STRATUM_NUMBER VARCHAR2(2),
    SAMPLING_YEAR NUMBER(5,0),
    TIMBER_MARK VARCHAR2(6),
    TIMBER_BRAND VARCHAR2(7),
    PRIMARY_QUANT_LIC_TYPE_CD VARCHAR2(1),
    PRIMARY_LICENSE_NUMBER VARCHAR2(4),
    SECONDARY_QUANT_LIC_TYPE_CD VARCHAR2(1),
    SECONDARY_LICENSE_NUMBER VARCHAR2(4),
    SIGNING_QUANT_LIC_TYPE_CD VARCHAR2(1),
    SIGNING_LICENSE_NUMBER VARCHAR2(4),
    SAMPLED_WEIGH_SLIP VARCHAR2(10),
    SAMPLE_WEIGHT NUMBER(6,0),
    RETURN_NUMBER NUMBER(4,0) NOT NULL,
    LOG_COUNT NUMBER(4,0) NOT NULL,
    NET_VOLUME NUMBER(7,3),
    VOLUME_CALC_METHOD_TYPE VARCHAR2(1),
    ORIG_CHK_SCL_QUANT_LIC_TYPE_CD VARCHAR2(1),
    ORIGINAL_DDN VARCHAR2(13),
    ORIGINAL_DDV NUMBER(2,0),
    ORIG_CHK_SCL_LICENSE_NUMBER VARCHAR2(4),
    ORIG_CHK_SCL_RETURN_NUMBER NUMBER(4,0),
    ORIG_REDTAG_SCALE_SITE_ID_NMBR VARCHAR2(4),
    ACTIVE_VERSION_IND VARCHAR2(1) NOT NULL,
    VALID_SIGNATURE_IND VARCHAR2(1) NOT NULL,
    CHECK_REPLACES_ORIGINAL_IND VARCHAR2(1),
    ORIGINAL_VERSION_IND VARCHAR2(1) NOT NULL,
    TRANSPORT_IDENTIFIER VARCHAR2(16),
    INCOMING_LDS_NUMBER VARCHAR2(10),
    LOAD_ARRIVAL_NUMBER VARCHAR2(10),
    SAMPLE_LOG_TALLY_COMMENT VARCHAR2(240),
    DTL_DOC_SEQ NUMBER(32,0) NOT NULL,
    INPUT_SCALE_SITE VARCHAR2(4),
    INPUT_ORIG_REDTAG_SCL_SITE VARCHAR2(4),
    INPUT_SOURCE VARCHAR2(7),
    INPUT_PRIMARY_SCALER_LIC VARCHAR2(4),
    INPUT_PSY VARCHAR2(8),
    INPUT_SECONDARY_SCALER_LIC VARCHAR2(4),
    INPUT_SIGNING_SCALER_LIC VARCHAR2(4),
    INPUT_ORIGINAL_DDN VARCHAR2(13),
    INPUT_ORIGINAL_DDV NUMBER(2,0),
    INPUT_ORIG_CHK_SCL_SCALER_LIC VARCHAR2(4),
    FIELD_SCALE_DECK_ID VARCHAR2(1),
    ENCRYPTED_SIGNATURE RAW(512),
    HBS_ENCR_KEY_ID NUMBER(2,0),
    INPUT_HBS_ENCR_KEY_ID NUMBER(2,0),
    HBS_RSA_PADDING_ID NUMBER(2,0),
    DECRYPTED_SIGNATURE VARCHAR2(128),
    HASH_TOTAL VARCHAR2(128),
    HBS_CRYPT_METHOD_ID NUMBER(2,0),
    SIGNING_DATE_TIME DATE,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30),
    UPDATE_TIMESTAMP DATE
);

-- Explicit CHECK constraints (NOT NULL and other conditions)
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017740 CHECK (DETAIL_DOCUMENT_NUMBER IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017741 CHECK (VERSION IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017742 CHECK (SCALE_EVENT_TYPE_CODE IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017744 CHECK (SCL_RTN_VERSION_STATE_CODE IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017746 CHECK (SCALE_DATE IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017748 CHECK (RETURN_NUMBER IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017750 CHECK (LOG_COUNT IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017751 CHECK (ACTIVE_VERSION_IND IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017752 CHECK (VALID_SIGNATURE_IND IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017753 CHECK (ORIGINAL_VERSION_IND IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017754 CHECK (DTL_DOC_SEQ IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017755 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0017756 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0039131 CHECK (ACTIVE_VERSION_IND IN ('Y', 'N'));
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0039132 CHECK (CHECK_REPLACES_ORIGINAL_IND IN ('Y', 'N'));
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0039133 CHECK (ORIGINAL_VERSION_IND IN ('Y', 'N'));
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SYS_C0039134 CHECK (VOLUME_CALC_METHOD_TYPE IN ('G', 'N'));
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT C$08_SAMPLE_TLY_LOG_COUNT CHECK (LOG_COUNT > 0);
-- Additional complex check constraints omitted for brevity

-- Primary Key
ALTER TABLE SAMPLE_LOG_TALLY ADD CONSTRAINT SAMPLE_LOG_TALLY_PK PRIMARY KEY (DETAIL_DOCUMENT_NUMBER, VERSION);

-- Indexes
CREATE INDEX SMPLOGTLY_STRATUM_FK_I ON SAMPLE_LOG_TALLY (POPULATION_NUMBER, STRATUM_NUMBER, SAMPLING_YEAR);
CREATE INDEX SMPLOGTLY_SRVERSTATE_FK_I ON SAMPLE_LOG_TALLY (SCL_RTN_VERSION_STATE_CODE);
CREATE INDEX SMPLOGTLY_SETC_FK_I ON SAMPLE_LOG_TALLY (SCALE_EVENT_TYPE_CODE);
CREATE INDEX SMPLOGTLY_MOF_TM_FK_I ON SAMPLE_LOG_TALLY (TIMBER_MARK);
CREATE INDEX SMPLOGTLY_MOF_SS_FK_I ON SAMPLE_LOG_TALLY (SCALE_SITE_ID_NMBR);
CREATE INDEX SMPLOGTLY_BATDOC_FK_I ON SAMPLE_LOG_TALLY (BATDOC_ID);
CREATE INDEX SMPLOGTLY_HRPS_FK_I ON SAMPLE_LOG_TALLY (HBS_RSA_PADDING_ID);
CREATE INDEX SMPLOGTLY_HCM_FK_I ON SAMPLE_LOG_TALLY (HBS_CRYPT_METHOD_ID);
CREATE INDEX SMPLOGTLY_HEK_FK1_I ON SAMPLE_LOG_TALLY (HBS_ENCR_KEY_ID);
-- Additional indexes omitted for brevity

-- Foreign Keys (commented for later use)
-- DDL Migration for WASTE_STRATUM_HISTORY (DBeaver style)
-- Table columns
CREATE TABLE WASTE_STRATUM_HISTORY (
    WASTE_STRATUM_ID NUMBER(12,0) NOT NULL,
    WASTE_HISTORY_ID NUMBER(12,0) NOT NULL,
    WASTE_STRATUM_TYPE_CODE VARCHAR2(3) NOT NULL,
    WASTE_TYPE_CODE VARCHAR2(3),
    WASTE_HARVEST_METHOD_CODE VARCHAR2(2),
    WASTE_ASSESSMENT_METHOD_CODE VARCHAR2(4) NOT NULL,
    WASTE_PLOT_SIZE_CODE NUMBER(5,0),
    WASTE_LEVEL_CODE VARCHAR2(1),
    STRATUM_AREA NUMBER(5,2) NOT NULL,
    TOTAL_ESTIMATED_VOLUME NUMBER(5,0),
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE WASTE_STRATUM_HISTORY ADD CONSTRAINT SYS_C0020567 CHECK (WASTE_STRATUM_ID IS NOT NULL);
ALTER TABLE WASTE_STRATUM_HISTORY ADD CONSTRAINT SYS_C0020569 CHECK (WASTE_HISTORY_ID IS NOT NULL);
ALTER TABLE WASTE_STRATUM_HISTORY ADD CONSTRAINT SYS_C0020570 CHECK (WASTE_STRATUM_TYPE_CODE IS NOT NULL);
ALTER TABLE WASTE_STRATUM_HISTORY ADD CONSTRAINT SYS_C0020571 CHECK (WASTE_ASSESSMENT_METHOD_CODE IS NOT NULL);
ALTER TABLE WASTE_STRATUM_HISTORY ADD CONSTRAINT SYS_C0020572 CHECK (STRATUM_AREA IS NOT NULL);
ALTER TABLE WASTE_STRATUM_HISTORY ADD CONSTRAINT SYS_C0020573 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE WASTE_STRATUM_HISTORY ADD CONSTRAINT SYS_C0020574 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_STRATUM_HISTORY ADD CONSTRAINT SYS_C0020575 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_STRATUM_HISTORY ADD CONSTRAINT SYS_C0020576 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE WASTE_STRATUM_HISTORY ADD CONSTRAINT SYS_C0020577 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_STRATUM_HISTORY ADD CONSTRAINT WSTRAH_PK PRIMARY KEY (WASTE_HISTORY_ID, WASTE_STRATUM_ID);

-- Indexes

-- Foreign Keys (commented for later use)-- DDL Migration for WASTE_PLOT_HISTORY (DBeaver style)
-- Table columns
CREATE TABLE WASTE_PLOT_HISTORY (
    WASTE_PLOT_NUMBER NUMBER(3,0) NOT NULL,
    WASTE_BASELINE VARCHAR2(1),
    WASTE_STRIP NUMBER(2,0),
    MEASURE_FACTOR NUMBER(3,0) NOT NULL,
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    WASTE_PLOT_ID NUMBER(12,0) NOT NULL,
    WASTE_HISTORY_ID NUMBER(12,0) NOT NULL,
    WASTE_STRATUM_ID NUMBER(12,0) NOT NULL
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE WASTE_PLOT_HISTORY ADD CONSTRAINT SYS_C0020592 CHECK (WASTE_PLOT_ID IS NOT NULL);
ALTER TABLE WASTE_PLOT_HISTORY ADD CONSTRAINT SYS_C0020593 CHECK (WASTE_HISTORY_ID IS NOT NULL);
ALTER TABLE WASTE_PLOT_HISTORY ADD CONSTRAINT SYS_C0020594 CHECK (WASTE_STRATUM_ID IS NOT NULL);
ALTER TABLE WASTE_PLOT_HISTORY ADD CONSTRAINT SYS_C0020595 CHECK (WASTE_PLOT_NUMBER IS NOT NULL);
ALTER TABLE WASTE_PLOT_HISTORY ADD CONSTRAINT SYS_C0020596 CHECK (MEASURE_FACTOR IS NOT NULL);
ALTER TABLE WASTE_PLOT_HISTORY ADD CONSTRAINT SYS_C0020597 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE WASTE_PLOT_HISTORY ADD CONSTRAINT SYS_C0020598 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_PLOT_HISTORY ADD CONSTRAINT SYS_C0020599 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_PLOT_HISTORY ADD CONSTRAINT SYS_C0020601 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE WASTE_PLOT_HISTORY ADD CONSTRAINT SYS_C0020602 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_PLOT_HISTORY ADD CONSTRAINT WPLOH_PK PRIMARY KEY (WASTE_PLOT_ID, WASTE_HISTORY_ID);

-- Unique Index
CREATE UNIQUE INDEX WPLOH_UK ON WASTE_PLOT_HISTORY (WASTE_STRIP, WASTE_STRATUM_ID, WASTE_HISTORY_ID, WASTE_PLOT_ID);

-- Foreign Keys (commented for later use)-- DDL Migration for WASTE_SPONSOR (DBeaver style)
-- Table columns
CREATE TABLE WASTE_SPONSOR (
    PERSONALLY_SUPERVISED_IND VARCHAR2(1),
    PERSONALLY_REVIEWED_IND VARCHAR2(1),
    WASTE_RELIEF_IND VARCHAR2(1),
    RATIONALE_REQUIRED_IND VARCHAR2(1),
    BURNT_PILES_IND VARCHAR2(1),
    FAX VARCHAR2(12),
    EMAIL VARCHAR2(100),
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    WASTE_SPONSOR_ID NUMBER(12,0) NOT NULL,
    WASTE_ASSESSMENT_AREA_ID NUMBER(12,0),
    WASTE_SUBMITTER_ROLE_TYPE_CODE VARCHAR2(3) NOT NULL,
    SURVEYOR_SCALER_LICENSE_NUMBER VARCHAR2(5),
    PERSONALLY_COMPLETED_IND VARCHAR2(1),
    SPONSORED_BY_RFP_RFT_IND VARCHAR2(1),
    WASTE_DESIGNATION_TYPE_CODE VARCHAR2(3),
    LICENSE_NUMBER VARCHAR2(5),
    NAME VARCHAR2(80),
    PHONE VARCHAR2(12)
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE WASTE_SPONSOR ADD CONSTRAINT SYS_C0020802 CHECK (WASTE_SPONSOR_ID IS NOT NULL);
ALTER TABLE WASTE_SPONSOR ADD CONSTRAINT SYS_C0020803 CHECK (WASTE_SUBMITTER_ROLE_TYPE_CODE IS NOT NULL);
ALTER TABLE WASTE_SPONSOR ADD CONSTRAINT SYS_C0020804 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE WASTE_SPONSOR ADD CONSTRAINT SYS_C0020805 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_SPONSOR ADD CONSTRAINT SYS_C0020806 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_SPONSOR ADD CONSTRAINT SYS_C0020807 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE WASTE_SPONSOR ADD CONSTRAINT SYS_C0020808 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_SPONSOR ADD CONSTRAINT WS_PK PRIMARY KEY (WASTE_SPONSOR_ID);

-- Indexes
CREATE INDEX WS_WAA_FK_I ON WASTE_SPONSOR (WASTE_ASSESSMENT_AREA_ID);
CREATE INDEX WS_WSRTC_FK_I ON WASTE_SPONSOR (WASTE_SUBMITTER_ROLE_TYPE_CODE);
CREATE INDEX WS_WDTC1_FK_I ON WASTE_SPONSOR (WASTE_DESIGNATION_TYPE_CODE);

-- Foreign Keys (commented for later use)-- DDL Migration for WASTE_PIECE (DBeaver style)
-- Table columns
CREATE TABLE WASTE_PIECE (
    WASTE_PIECE_ID NUMBER(12,0) NOT NULL,
    WASTE_PLOT_ID NUMBER(12,0),
    WASTE_STRATUM_ID NUMBER(12,0),
    WASTE_PIECE_NUMBER NUMBER(3,0) NOT NULL,
    WASTE_MATERIAL_KIND_CODE VARCHAR2(1) NOT NULL,
    WASTE_CLASS_CODE VARCHAR2(1) NOT NULL,
    SCALE_GRADE_CODE VARCHAR2(1) NOT NULL,
    SCALE_PRODUCT_CODE VARCHAR2(2) NOT NULL,
    SCALE_SPECIES_CODE VARCHAR2(2) NOT NULL,
    LENGTH NUMBER(3,0),
    TOP_DIAMETER NUMBER(3,0),
    TOP_END_CODE VARCHAR2(1),
    BUTT_DIAMETER NUMBER(3,0),
    BUTT_END_CODE VARCHAR2(1),
    WASTE_BORDERLINE_CODE VARCHAR2(1),
    TOP_DEDUCTION NUMBER(3,0),
    BUTT_DEDUCTION NUMBER(3,0),
    WASTE_DECAY_TYPE_CODE VARCHAR2(1),
    WASTE_COMMENT_CODE VARCHAR2(2),
    ESTIMATED_VOLUME NUMBER(8,3),
    ESTIMATED_PERCENT NUMBER(4,1),
    DENSITY_ESTIMATE NUMBER(8,3),
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    LENGTH_DEDUCTION NUMBER(3,0)
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE WASTE_PIECE ADD CONSTRAINT SYS_C0018445 CHECK (WASTE_PIECE_ID IS NOT NULL);
ALTER TABLE WASTE_PIECE ADD CONSTRAINT SYS_C0018447 CHECK (WASTE_PIECE_NUMBER IS NOT NULL);
ALTER TABLE WASTE_PIECE ADD CONSTRAINT SYS_C0018449 CHECK (WASTE_MATERIAL_KIND_CODE IS NOT NULL);
ALTER TABLE WASTE_PIECE ADD CONSTRAINT SYS_C0018451 CHECK (WASTE_CLASS_CODE IS NOT NULL);
ALTER TABLE WASTE_PIECE ADD CONSTRAINT SYS_C0018453 CHECK (SCALE_GRADE_CODE IS NOT NULL);
ALTER TABLE WASTE_PIECE ADD CONSTRAINT SYS_C0018455 CHECK (SCALE_PRODUCT_CODE IS NOT NULL);
ALTER TABLE WASTE_PIECE ADD CONSTRAINT SYS_C0018457 CHECK (SCALE_SPECIES_CODE IS NOT NULL);
ALTER TABLE WASTE_PIECE ADD CONSTRAINT SYS_C0018459 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE WASTE_PIECE ADD CONSTRAINT SYS_C0018461 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_PIECE ADD CONSTRAINT SYS_C0018463 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_PIECE ADD CONSTRAINT SYS_C0018464 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE WASTE_PIECE ADD CONSTRAINT SYS_C0018465 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_PIECE ADD CONSTRAINT WPIE_PK PRIMARY KEY (WASTE_PIECE_ID);

-- Indexes
CREATE INDEX WPIE_BC_FK_I ON WASTE_PIECE (WASTE_BORDERLINE_CODE);
CREATE INDEX WPIE_DTC_FK_I ON WASTE_PIECE (WASTE_DECAY_TYPE_CODE);
CREATE INDEX WPIE_PEC_FK_I ON WASTE_PIECE (BUTT_END_CODE, TOP_END_CODE);
CREATE INDEX WPIE_SPGX_FK_I ON WASTE_PIECE (SCALE_GRADE_CODE, SCALE_PRODUCT_CODE, SCALE_SPECIES_CODE);
CREATE INDEX WPIE_WACC_FK_I ON WASTE_PIECE (WASTE_COMMENT_CODE);
CREATE INDEX WPIE_WCC_FK_I ON WASTE_PIECE (WASTE_CLASS_CODE);
CREATE INDEX WPIE_WPLO_FK_I ON WASTE_PIECE (WASTE_PLOT_ID);
CREATE INDEX WPIE_WSTR_FK_I ON WASTE_PIECE (WASTE_STRATUM_ID);
CREATE INDEX WPIBUTT_END_CODE_IDENTIFIED__I ON WASTE_PIECE (BUTT_END_CODE);

-- Foreign Keys (commented for later use)-- DDL Migration for HBS_RSA_PADDING_SCHEME (DBeaver style)
-- Table columns
CREATE TABLE HBS_RSA_PADDING_SCHEME (
    HBS_RSA_PADDING_ID NUMBER(2,0) NOT NULL,
    DESCRIPTION VARCHAR2(30) NOT NULL,
    JAVA_CIPHER VARCHAR2(100) NOT NULL,
    EXPIRY_DATE DATE NOT NULL,
    EFFECTIVE_DATE DATE NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30),
    UPDATE_TIMESTAMP DATE
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE HBS_RSA_PADDING_SCHEME ADD CONSTRAINT SYS_C0017901 CHECK (HBS_RSA_PADDING_ID IS NOT NULL);
ALTER TABLE HBS_RSA_PADDING_SCHEME ADD CONSTRAINT SYS_C0017902 CHECK (DESCRIPTION IS NOT NULL);
ALTER TABLE HBS_RSA_PADDING_SCHEME ADD CONSTRAINT SYS_C0017903 CHECK (JAVA_CIPHER IS NOT NULL);
ALTER TABLE HBS_RSA_PADDING_SCHEME ADD CONSTRAINT SYS_C0017904 CHECK (EXPIRY_DATE IS NOT NULL);
ALTER TABLE HBS_RSA_PADDING_SCHEME ADD CONSTRAINT SYS_C0017905 CHECK (EFFECTIVE_DATE IS NOT NULL);
ALTER TABLE HBS_RSA_PADDING_SCHEME ADD CONSTRAINT SYS_C0017906 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE HBS_RSA_PADDING_SCHEME ADD CONSTRAINT SYS_C0017907 CHECK (ENTRY_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE HBS_RSA_PADDING_SCHEME ADD CONSTRAINT HBS_RSA_PADDING_SCHEME_PK PRIMARY KEY (HBS_RSA_PADDING_ID);

-- Indexes
-- DDL migration for HBS_CRYPTOGRAPHY_METHOD (DBeaver style)
CREATE TABLE HBS_CRYPTOGRAPHY_METHOD (
    HBS_CRYPT_METHOD_ID NUMBER(2,0) NOT NULL,
    DESCRIPTION VARCHAR2(30) NOT NULL,
    EXPIRY_DATE DATE NOT NULL,
    EFFECTIVE_DATE DATE NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30),
    UPDATE_TIMESTAMP DATE
);

-- Explicit CHECK constraints
ALTER TABLE HBS_CRYPTOGRAPHY_METHOD ADD CONSTRAINT SYS_C0017918 CHECK (HBS_CRYPT_METHOD_ID IS NOT NULL);
ALTER TABLE HBS_CRYPTOGRAPHY_METHOD ADD CONSTRAINT SYS_C0017919 CHECK (DESCRIPTION IS NOT NULL);
ALTER TABLE HBS_CRYPTOGRAPHY_METHOD ADD CONSTRAINT SYS_C0017920 CHECK (EXPIRY_DATE IS NOT NULL);
ALTER TABLE HBS_CRYPTOGRAPHY_METHOD ADD CONSTRAINT SYS_C0017921 CHECK (EFFECTIVE_DATE IS NOT NULL);
ALTER TABLE HBS_CRYPTOGRAPHY_METHOD ADD CONSTRAINT SYS_C0017922 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE HBS_CRYPTOGRAPHY_METHOD ADD CONSTRAINT SYS_C0017923 CHECK (ENTRY_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE HBS_CRYPTOGRAPHY_METHOD ADD CONSTRAINT HBS_CRYPTOGRAPHY_METHOD_PK PRIMARY KEY (HBS_CRYPT_METHOD_ID);

-- Unique Index

-- No foreign keys found
-- DDL Migration for WASTE_ASSESS_AREA_STS_AUDIT (DBeaver style)
-- Table columns
CREATE TABLE WASTE_ASSESS_AREA_STS_AUDIT (
    WASTE_ASSESSMENT_AREA_AUDIT_ID NUMBER(12,0) NOT NULL,
    WASTE_ASSESSMENT_AREA_ID NUMBER(12,0),
    WASTE_ASSESS_AREA_STS_CODE VARCHAR2(4) NOT NULL,
    WASTE_COMMENT VARCHAR2(2000),
    DOCUMENT_CONTROL_NUMBER NUMBER(10,0),
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE WASTE_ASSESS_AREA_STS_AUDIT ADD CONSTRAINT SYS_C0017727 CHECK (WASTE_ASSESSMENT_AREA_AUDIT_ID IS NOT NULL);
ALTER TABLE WASTE_ASSESS_AREA_STS_AUDIT ADD CONSTRAINT SYS_C0017728 CHECK (WASTE_ASSESS_AREA_STS_CODE IS NOT NULL);
ALTER TABLE WASTE_ASSESS_AREA_STS_AUDIT ADD CONSTRAINT SYS_C0017729 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_ASSESS_AREA_STS_AUDIT ADD CONSTRAINT SYS_C0017730 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_ASSESS_AREA_STS_AUDIT ADD CONSTRAINT SYS_C0017731 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE WASTE_ASSESS_AREA_STS_AUDIT ADD CONSTRAINT SYS_C0017732 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_ASSESS_AREA_STS_AUDIT ADD CONSTRAINT WAASA_PK PRIMARY KEY (WASTE_ASSESSMENT_AREA_AUDIT_ID);

-- Indexes
CREATE INDEX WAASA_WAA_FK_I ON WASTE_ASSESS_AREA_STS_AUDIT (WASTE_ASSESSMENT_AREA_ID);
CREATE INDEX WAASA_WAASC_FK_I ON WASTE_ASSESS_AREA_STS_AUDIT (WASTE_ASSESS_AREA_STS_CODE);
CREATE INDEX WAASA_HSR_FK_I ON WASTE_ASSESS_AREA_STS_AUDIT (DOCUMENT_CONTROL_NUMBER);

-- Foreign Keys (commented for later use)
-- DDL Migration for WASTE_ASSESSMENT_SEGREGATION (DBeaver style)
-- Table columns
CREATE TABLE WASTE_ASSESSMENT_SEGREGATION (
    SCALE_GRADE_CODE VARCHAR2(1) NOT NULL,
    SCALE_PRODUCT_CODE VARCHAR2(2) NOT NULL,
    SCALE_SPECIES_CODE VARCHAR2(2) NOT NULL,
    WASTE_ASSESSMENT_AREA_ID NUMBER(12,0) NOT NULL,
    ESTIMATED_VOLUME NUMBER(9,3) NOT NULL,
    RATE NUMBER NOT NULL,
    AVOIDABLE_IND VARCHAR2(1) NOT NULL,
    NUMBER_OF_PIECES NUMBER(6,0) NOT NULL
);

-- Explicit CHECK constraints (NOT NULL and other conditions)
ALTER TABLE WASTE_ASSESSMENT_SEGREGATION ADD CONSTRAINT SYS_C0018699 CHECK (SCALE_GRADE_CODE IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SEGREGATION ADD CONSTRAINT SYS_C0018700 CHECK (SCALE_PRODUCT_CODE IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SEGREGATION ADD CONSTRAINT SYS_C0018701 CHECK (SCALE_SPECIES_CODE IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SEGREGATION ADD CONSTRAINT SYS_C0018702 CHECK (WASTE_ASSESSMENT_AREA_ID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SEGREGATION ADD CONSTRAINT SYS_C0018703 CHECK (ESTIMATED_VOLUME IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SEGREGATION ADD CONSTRAINT SYS_C0018704 CHECK (RATE IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SEGREGATION ADD CONSTRAINT SYS_C0018705 CHECK (AVOIDABLE_IND IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SEGREGATION ADD CONSTRAINT SYS_C0018706 CHECK (NUMBER_OF_PIECES IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SEGREGATION ADD CONSTRAINT WAS_AI_CHK CHECK (AVOIDABLE_IND IN ('N', 'Y'));

-- Primary Key
ALTER TABLE WASTE_ASSESSMENT_SEGREGATION ADD CONSTRAINT WAS_PK PRIMARY KEY (SCALE_GRADE_CODE, SCALE_PRODUCT_CODE, SCALE_SPECIES_CODE, WASTE_ASSESSMENT_AREA_ID, AVOIDABLE_IND);

-- Indexes
CREATE INDEX WAS_WAA_FK_I ON WASTE_ASSESSMENT_SEGREGATION (WASTE_ASSESSMENT_AREA_ID);
CREATE INDEX WAS_SPGX_FK_I ON WASTE_ASSESSMENT_SEGREGATION (SCALE_GRADE_CODE, SCALE_PRODUCT_CODE, SCALE_SPECIES_CODE);

-- Foreign Keys (commented for later use)
-- DDL Migration for WEIGH_SLIP (DBeaver style)
-- Table columns
CREATE TABLE WEIGH_SLIP (
    DETAIL_DOCUMENT_NUMBER VARCHAR2(13) NOT NULL,
    VERSION NUMBER(2,0) NOT NULL,
    BATDOC_ID NUMBER(32,0),
    SCALE_EVENT_TYPE_CODE VARCHAR2(2) NOT NULL,
    SCL_RTN_VERSION_STATE_CODE VARCHAR2(3) NOT NULL,
    SCALE_DATE DATE NOT NULL,
    SCALE_SITE_ID_NMBR VARCHAR2(4),
    CUT_BLOCK_ID VARCHAR2(10),
    POPULATION_NUMBER VARCHAR2(4),
    STRATUM_NUMBER VARCHAR2(2),
    SAMPLING_YEAR NUMBER(5,0),
    TIMBER_MARK VARCHAR2(6),
    TIMBER_BRAND VARCHAR2(7),
    COMPANY_USE_STRATUM VARCHAR2(8),
    PRIMARY_QUANT_LIC_TYPE_CD VARCHAR2(1),
    PRIMARY_LICENSE_NUMBER VARCHAR2(4),
    SECONDARY_QUANT_LIC_TYPE_CD VARCHAR2(1),
    SECONDARY_LICENSE_NUMBER VARCHAR2(4),
    SIGNING_QUANT_LIC_TYPE_CD VARCHAR2(1),
    SIGNING_LICENSE_NUMBER VARCHAR2(4),
    WEIGH_SLIP_NUMBER VARCHAR2(10) NOT NULL,
    GROSS_WEIGHT NUMBER(6,0),
    HBS_SAMPLE_TYPE_CODE VARCHAR2(1),
    TARE_WEIGHT NUMBER(6,0),
    SAMPLE_DEDUCTION_WEIGHT NUMBER(6,0),
    ORIGINAL_VERSION_IND VARCHAR2(1) NOT NULL,
    VALID_SIGNATURE_IND VARCHAR2(1) NOT NULL,
    ACTIVE_VERSION_IND VARCHAR2(1) NOT NULL,
    FIELD_SCALE_IND VARCHAR2(1),
    FIELD_SCALE_DECK_ID VARCHAR2(1),
    TRANSPORT_IDENTIFIER VARCHAR2(16),
    INCOMING_LDS_NUMBER VARCHAR2(10),
    OUTGOING_LDS_NUMBER VARCHAR2(10),
    DESTINATION VARCHAR2(4),
    WEIGH_SLIP_COMMENT VARCHAR2(240),
    DTL_DOC_SEQ NUMBER(32,0) NOT NULL,
    INPUT_SECONDARY_SCALER_LIC VARCHAR2(4),
    INPUT_CUTBLOCK_ID VARCHAR2(10),
    INPUT_PRIMARY_SCALER_LIC VARCHAR2(4),
    INPUT_SOURCE VARCHAR2(7),
    INPUT_PSY VARCHAR2(8),
    INPUT_SCALE_SITE VARCHAR2(4),
    INPUT_SIGNING_SCALER_LIC VARCHAR2(4),
    ENCRYPTED_SIGNATURE RAW(512),
    HBS_ENCR_KEY_ID NUMBER(2,0),
    INPUT_HBS_ENCR_KEY_ID NUMBER(2,0),
    HBS_RSA_PADDING_ID NUMBER(2,0),
    DECRYPTED_SIGNATURE VARCHAR2(128),
    HASH_TOTAL VARCHAR2(128),
    HBS_CRYPT_METHOD_ID NUMBER(2,0),
    SIGNING_DATE_TIME DATE,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30),
    UPDATE_TIMESTAMP DATE
);

-- Explicit CHECK constraints (NOT NULL and other conditions)
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0017831 CHECK (DETAIL_DOCUMENT_NUMBER IS NOT NULL);
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0017832 CHECK (VERSION IS NOT NULL);
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0017833 CHECK (SCALE_EVENT_TYPE_CODE IS NOT NULL);
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0017834 CHECK (SCL_RTN_VERSION_STATE_CODE IS NOT NULL);
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0017835 CHECK (SCALE_DATE IS NOT NULL);
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0017836 CHECK (WEIGH_SLIP_NUMBER IS NOT NULL);
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0017837 CHECK (ORIGINAL_VERSION_IND IS NOT NULL);
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0017838 CHECK (VALID_SIGNATURE_IND IS NOT NULL);
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0017839 CHECK (ACTIVE_VERSION_IND IS NOT NULL);
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0017840 CHECK (DTL_DOC_SEQ IS NOT NULL);
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0017841 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0017842 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0039054 CHECK (FIELD_SCALE_IND IN ('Y', 'N'));
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0039089 CHECK (ORIGINAL_VERSION_IND IN ('Y', 'N'));
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0039029 CHECK (ACTIVE_VERSION_IND IN ('Y', 'N'));
-- Additional complex check constraints omitted for brevity

-- Primary Key
ALTER TABLE WEIGH_SLIP ADD CONSTRAINT SYS_C0039569 PRIMARY KEY (DETAIL_DOCUMENT_NUMBER, VERSION);

-- Indexes
CREATE INDEX WST_HRPS_FK_I ON WEIGH_SLIP (HBS_RSA_PADDING_ID);
CREATE INDEX WST_HCM_FK_I ON WEIGH_SLIP (HBS_CRYPT_METHOD_ID);
CREATE INDEX WST_HEK_FK1_I ON WEIGH_SLIP (HBS_ENCR_KEY_ID);
CREATE INDEX WSDR_PRIMARY_QL_FK_I ON WEIGH_SLIP (PRIMARY_LICENSE_NUMBER);
CREATE INDEX WSDR_MOF_TM_FK_I ON WEIGH_SLIP (TIMBER_MARK);
CREATE INDEX WSDR_SETC_FK_I ON WEIGH_SLIP (SCALE_EVENT_TYPE_CODE);
CREATE INDEX WSDR_VER_STATUS_FK_I ON WEIGH_SLIP (SCL_RTN_VERSION_STATE_CODE);
CREATE INDEX WSDR_DTLSCLDOC_FK_I ON WEIGH_SLIP (DETAIL_DOCUMENT_NUMBER);
CREATE INDEX WSDR_MOF_SS_FK_I ON WEIGH_SLIP (SCALE_SITE_ID_NMBR);
CREATE INDEX WSDR_PSYM_I ON WEIGH_SLIP (INPUT_PSY);
CREATE INDEX WSDR_BATDOC_FK_I ON WEIGH_SLIP (BATDOC_ID);
-- Additional indexes omitted for brevity

-- Foreign Keys (commented for later use)
-- DDL Migration for DTL_SCL_DOC_TRANSMISSION (DBeaver style)
-- Table columns
CREATE TABLE DTL_SCL_DOC_TRANSMISSION (
    HBS_XML_TRANS_STEP_CODE VARCHAR2(3) NOT NULL,
    TRANSMISSION_ID NUMBER(32,0) NOT NULL,
    HBS_PROCESSING_STATUS_CODE VARCHAR2(3) NOT NULL,
    USER_ID VARCHAR2(30),
    CLIENT_LOCN_CODE VARCHAR2(2),
    CLIENT_NUMBER VARCHAR2(8),
    BATCH_COUNT NUMBER(10,0) NOT NULL,
    ACCEPTED_IND VARCHAR2(1) NOT NULL,
    FILE_NAME VARCHAR2(100) NOT NULL,
    FILE_DATETIME DATE NOT NULL,
    RECORD_COUNT NUMBER(10,0) NOT NULL,
    TEST_FILE_IND VARCHAR2(1),
    INPUT_USERID VARCHAR2(30),
    RECD_DIRECTORY VARCHAR2(200),
    RECD_CLIENT_NUMBER VARCHAR2(8),
    HBS_XML_PURGE_STATUS_CODE VARCHAR2(3),
    HBS_XML_PURGE_TIMESTAMP DATE,
    SOFTWARE_PRODUCT VARCHAR2(12),
    SOFTWARE_VERSION VARCHAR2(4),
    SOFTWARE_REVISION VARCHAR2(4),
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30),
    UPDATE_TIMESTAMP DATE
);

-- Explicit CHECK constraints (NOT NULL and other conditions)
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT SYS_C0017869 CHECK (HBS_XML_TRANS_STEP_CODE IS NOT NULL);
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT SYS_C0017870 CHECK (TRANSMISSION_ID IS NOT NULL);
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT SYS_C0017871 CHECK (HBS_PROCESSING_STATUS_CODE IS NOT NULL);
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT SYS_C0017872 CHECK (BATCH_COUNT IS NOT NULL);
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT SYS_C0017873 CHECK (ACCEPTED_IND IS NOT NULL);
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT SYS_C0017874 CHECK (FILE_NAME IS NOT NULL);
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT SYS_C0017875 CHECK (FILE_DATETIME IS NOT NULL);
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT SYS_C0017876 CHECK (RECORD_COUNT IS NOT NULL);
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT SYS_C0017877 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT SYS_C0017878 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT SYS_C0038927 CHECK (ACCEPTED_IND IN ('Y', 'N'));
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT SYS_C0038928 CHECK (TEST_FILE_IND IN ('Y', 'N'));

-- Primary Key
ALTER TABLE DTL_SCL_DOC_TRANSMISSION ADD CONSTRAINT DTLDOCTRAN_PK PRIMARY KEY (TRANSMISSION_ID);

-- Indexes
CREATE INDEX DTLDOCTRAN_MOF_CL_FK_I ON DTL_SCL_DOC_TRANSMISSION (CLIENT_NUMBER, CLIENT_LOCN_CODE);

-- Foreign Keys (commented for later use)
-- DDL Migration for WASTE_HISTORY (DBeaver style)
-- Table columns
CREATE TABLE WASTE_HISTORY (
    WASTE_HISTORY_ID NUMBER(12,0) NOT NULL,
    WASTE_ASSESSMENT_AREA_ID NUMBER(12,0) NOT NULL,
    VERSION_ID NUMBER(12,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE WASTE_HISTORY ADD CONSTRAINT SYS_C0020649 CHECK (WASTE_HISTORY_ID IS NOT NULL);
ALTER TABLE WASTE_HISTORY ADD CONSTRAINT SYS_C0020650 CHECK (WASTE_ASSESSMENT_AREA_ID IS NOT NULL);
ALTER TABLE WASTE_HISTORY ADD CONSTRAINT SYS_C0020651 CHECK (VERSION_ID IS NOT NULL);
ALTER TABLE WASTE_HISTORY ADD CONSTRAINT SYS_C0020652 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_HISTORY ADD CONSTRAINT SYS_C0020653 CHECK (ENTRY_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_HISTORY ADD CONSTRAINT WH_PK PRIMARY KEY (WASTE_HISTORY_ID);

-- Unique Index
CREATE UNIQUE INDEX WH_UK ON WASTE_HISTORY (WASTE_ASSESSMENT_AREA_ID, VERSION_ID);

-- Foreign Keys (commented for later use)
-- DDL Migration for WASTE_RESIDUE_RATE (DBeaver style)
-- Table columns
CREATE TABLE WASTE_RESIDUE_RATE (
    WSTRT_ID NUMBER(32,0) NOT NULL,
    TIMBER_MARK VARCHAR2(6) NOT NULL,
    CUT_BLOCK_ID VARCHAR2(10) NOT NULL,
    SCALE_SPECIES_CODE VARCHAR2(2) NOT NULL,
    SCALE_PRODUCT_CODE VARCHAR2(2) NOT NULL,
    SCALE_GRADE_CODE VARCHAR2(1) NOT NULL,
    WASTE_RATE_SOURCE_CODE VARCHAR2(2),
    ACTIVE_IND VARCHAR2(1) NOT NULL,
    AVOIDABLE_IND VARCHAR2(1) NOT NULL,
    RAW_RATE NUMBER(5,2),
    RATE NUMBER(5,2) NOT NULL,
    EFFECTIVE_DATE DATE NOT NULL,
    EXPIRY_DATE DATE NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30),
    UPDATE_TIMESTAMP DATE
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020536 CHECK (WSTRT_ID IS NOT NULL);
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020537 CHECK (TIMBER_MARK IS NOT NULL);
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020538 CHECK (CUT_BLOCK_ID IS NOT NULL);
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020539 CHECK (SCALE_SPECIES_CODE IS NOT NULL);
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020540 CHECK (SCALE_PRODUCT_CODE IS NOT NULL);
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020541 CHECK (SCALE_GRADE_CODE IS NOT NULL);
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020542 CHECK (ACTIVE_IND IS NOT NULL);
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020543 CHECK (AVOIDABLE_IND IS NOT NULL);
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020544 CHECK (RATE IS NOT NULL);
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020545 CHECK (EFFECTIVE_DATE IS NOT NULL);
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020546 CHECK (EXPIRY_DATE IS NOT NULL);
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020547 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT SYS_C0020548 CHECK (ENTRY_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_RESIDUE_RATE ADD CONSTRAINT WSTRATE_PK PRIMARY KEY (WSTRT_ID);

-- Indexes
CREATE INDEX WRR_HAA_FK_I ON WASTE_RESIDUE_RATE (TIMBER_MARK);
CREATE INDEX WRR_WRSC_FK_I ON WASTE_RESIDUE_RATE (WASTE_RATE_SOURCE_CODE);
CREATE INDEX WSTRATE_CUTBLK_FK_I ON WASTE_RESIDUE_RATE (CUT_BLOCK_ID);
CREATE INDEX WSTRATE_HBS_SGC_FK_I ON WASTE_RESIDUE_RATE (SCALE_GRADE_CODE);
CREATE INDEX WSTRATE_HBS_SPC_FK_I ON WASTE_RESIDUE_RATE (SCALE_PRODUCT_CODE);
CREATE INDEX WSTRATE_HBS_SSC_FK_I ON WASTE_RESIDUE_RATE (SCALE_SPECIES_CODE);

-- Foreign Keys (commented for later use)
-- DDL Migration for WASTE_REPORTING_UNIT (DBeaver style)
-- Table columns
CREATE TABLE WASTE_REPORTING_UNIT (
    CLIENT_LOCN_CODE VARCHAR2(2) NOT NULL,
    CLIENT_NUMBER VARCHAR2(8) NOT NULL,
    WASTE_SAMPLING_OPTION_CODE VARCHAR2(3) NOT NULL,
    WASTE_DISPERSED_CV_CODE VARCHAR2(3),
    WASTE_ACCUMULATED_CV_CODE VARCHAR2(3),
    APPRAISAL_METHOD_CODE VARCHAR2(1),
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    REPORTING_UNIT_ID NUMBER(12,0) NOT NULL,
    ORG_UNIT_NO NUMBER(10,0) NOT NULL
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE WASTE_REPORTING_UNIT ADD CONSTRAINT SYS_C0016434 CHECK (ORG_UNIT_NO IS NOT NULL);
ALTER TABLE WASTE_REPORTING_UNIT ADD CONSTRAINT SYS_C0016435 CHECK (CLIENT_LOCN_CODE IS NOT NULL);
ALTER TABLE WASTE_REPORTING_UNIT ADD CONSTRAINT SYS_C0016436 CHECK (CLIENT_NUMBER IS NOT NULL);
ALTER TABLE WASTE_REPORTING_UNIT ADD CONSTRAINT SYS_C0016437 CHECK (WASTE_SAMPLING_OPTION_CODE IS NOT NULL);
ALTER TABLE WASTE_REPORTING_UNIT ADD CONSTRAINT SYS_C0016439 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE WASTE_REPORTING_UNIT ADD CONSTRAINT SYS_C0016441 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_REPORTING_UNIT ADD CONSTRAINT SYS_C0016443 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_REPORTING_UNIT ADD CONSTRAINT SYS_C0016445 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE WASTE_REPORTING_UNIT ADD CONSTRAINT SYS_C0016447 CHECK (UPDATE_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_REPORTING_UNIT ADD CONSTRAINT SYS_C0016433 CHECK (REPORTING_UNIT_ID IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_REPORTING_UNIT ADD CONSTRAINT WRU_PK PRIMARY KEY (REPORTING_UNIT_ID);

-- Indexes
CREATE INDEX WRU_WDCV_FK_I ON WASTE_REPORTING_UNIT (WASTE_DISPERSED_CV_CODE);
CREATE INDEX WRU_CL_FK_I ON WASTE_REPORTING_UNIT (CLIENT_NUMBER, CLIENT_LOCN_CODE);
CREATE INDEX WRU_OU_FK_I ON WASTE_REPORTING_UNIT (ORG_UNIT_NO);
CREATE INDEX WRU_SOC_FK_I ON WASTE_REPORTING_UNIT (WASTE_SAMPLING_OPTION_CODE);
CREATE INDEX WRU_WACV_FK_I ON WASTE_REPORTING_UNIT (WASTE_ACCUMULATED_CV_CODE);

-- Foreign Keys (commented for later use)

-- DDL Migration for SPECIES_PRODUCT_GRADE_XREF (DBeaver style)
-- Table columns
CREATE TABLE SPECIES_PRODUCT_GRADE_XREF (
    SCALE_GRADE_CODE VARCHAR2(1) NOT NULL,
    SCALE_SPECIES_CODE VARCHAR2(2) NOT NULL,
    SCALE_PRODUCT_CODE VARCHAR2(2) NOT NULL,
    EFFECTIVE_DATE DATE NOT NULL,
    EXPIRY_DATE DATE NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL
);

-- Explicit CHECK constraints (NOT NULL)
ALTER TABLE SPECIES_PRODUCT_GRADE_XREF ADD CONSTRAINT SYS_C0025056 CHECK (SCALE_GRADE_CODE IS NOT NULL);
ALTER TABLE SPECIES_PRODUCT_GRADE_XREF ADD CONSTRAINT SYS_C0025057 CHECK (SCALE_SPECIES_CODE IS NOT NULL);
ALTER TABLE SPECIES_PRODUCT_GRADE_XREF ADD CONSTRAINT SYS_C0025058 CHECK (SCALE_PRODUCT_CODE IS NOT NULL);
ALTER TABLE SPECIES_PRODUCT_GRADE_XREF ADD CONSTRAINT SYS_C0025059 CHECK (EFFECTIVE_DATE IS NOT NULL);
ALTER TABLE SPECIES_PRODUCT_GRADE_XREF ADD CONSTRAINT SYS_C0025060 CHECK (EXPIRY_DATE IS NOT NULL);
ALTER TABLE SPECIES_PRODUCT_GRADE_XREF ADD CONSTRAINT SYS_C0025061 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE SPECIES_PRODUCT_GRADE_XREF ADD CONSTRAINT SSPGXREF_PK PRIMARY KEY (SCALE_GRADE_CODE, SCALE_SPECIES_CODE, SCALE_PRODUCT_CODE);

-- Indexes
CREATE INDEX SSPGXREF_HBS_SGC_FK_I ON SPECIES_PRODUCT_GRADE_XREF (SCALE_GRADE_CODE);
CREATE INDEX SSPGXREF_HBS_SSC_FK_I ON SPECIES_PRODUCT_GRADE_XREF (SCALE_SPECIES_CODE);
CREATE INDEX SSPGXREF_HBS_SPC_FK_I ON SPECIES_PRODUCT_GRADE_XREF (SCALE_PRODUCT_CODE);

-- Foreign Keys (commented for later use)
