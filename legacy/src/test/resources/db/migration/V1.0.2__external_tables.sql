-- DDL migration for WASTE_STRATUM (DBeaver style)
CREATE TABLE WASTE_STRATUM (
    WASTE_STRATUM_ID NUMBER(12,0) NOT NULL,
    WASTE_ASSESSMENT_AREA_ID NUMBER(12,0) NOT NULL,
    WASTE_STRATUM_TYPE_CODE VARCHAR2(3) NOT NULL,
    WASTE_TYPE_CODE VARCHAR2(3),
    WASTE_HARVEST_METHOD_CODE VARCHAR2(2),
    WASTE_ASSESSMENT_METHOD_CODE VARCHAR2(4) NOT NULL,
    WASTE_PLOT_SIZE_CODE NUMBER(5,0),
    WASTE_LEVEL_CODE VARCHAR2(1),
    STRATUM_AREA NUMBER(5,2) NOT NULL,
    TOTAL_ESTIMATED_VOLUME NUMBER(5,0),
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    WASTE_SURVEYOR_LICENCE VARCHAR2(4)
);

-- Explicit CHECK constraints
ALTER TABLE WASTE_STRATUM ADD CONSTRAINT SYS_C0027884 CHECK (WASTE_STRATUM_ID IS NOT NULL);
ALTER TABLE WASTE_STRATUM ADD CONSTRAINT SYS_C0027886 CHECK (WASTE_ASSESSMENT_AREA_ID IS NOT NULL);
ALTER TABLE WASTE_STRATUM ADD CONSTRAINT SYS_C0027889 CHECK (WASTE_STRATUM_TYPE_CODE IS NOT NULL);
ALTER TABLE WASTE_STRATUM ADD CONSTRAINT SYS_C0027892 CHECK (WASTE_ASSESSMENT_METHOD_CODE IS NOT NULL);
ALTER TABLE WASTE_STRATUM ADD CONSTRAINT SYS_C0027895 CHECK (STRATUM_AREA IS NOT NULL);
ALTER TABLE WASTE_STRATUM ADD CONSTRAINT SYS_C0027898 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE WASTE_STRATUM ADD CONSTRAINT SYS_C0027900 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_STRATUM ADD CONSTRAINT SYS_C0027902 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_STRATUM ADD CONSTRAINT SYS_C0027904 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE WASTE_STRATUM ADD CONSTRAINT SYS_C0027906 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_STRATUM ADD CONSTRAINT WSTR_PK PRIMARY KEY (WASTE_STRATUM_ID);

-- Unique Index

-- Non-unique Indexes
CREATE INDEX WSTR_PSC_FK_I ON WASTE_STRATUM (WASTE_PLOT_SIZE_CODE);
CREATE INDEX WSTR_WAA_FK_I ON WASTE_STRATUM (WASTE_ASSESSMENT_AREA_ID);
CREATE INDEX WSTR_WAMC_FK_I ON WASTE_STRATUM (WASTE_ASSESSMENT_METHOD_CODE);
CREATE INDEX WSTR_WLC_FK_I ON WASTE_STRATUM (WASTE_LEVEL_CODE);
CREATE INDEX WSTR_WSTC_FK_I ON WASTE_STRATUM (WASTE_STRATUM_TYPE_CODE);
CREATE INDEX WSTR_WTC_FK_I ON WASTE_STRATUM (WASTE_TYPE_CODE);
CREATE INDEX WSTR_HMC_FK_I ON WASTE_STRATUM (WASTE_HARVEST_METHOD_CODE);

-- Foreign keys (to be added separately)-- DDL migration for HARVESTING_AUTHORITY (DBeaver style)
CREATE TABLE HARVESTING_AUTHORITY (
    HVA_SKEY NUMBER(10,0) NOT NULL,
    FOREST_FILE_ID VARCHAR2(10) NOT NULL,
    CUTTING_PERMIT_ID VARCHAR2(3),
    HARVESTING_AUTHORITY_ID VARCHAR2(30),
    FOREST_DISTRICT NUMBER(10,0) NOT NULL,
    DISTRICT_ADMN_ZONE VARCHAR2(4),
    GEOGRAPHIC_DISTRICT NUMBER(10,0) NOT NULL,
    MGMT_UNIT_ID VARCHAR2(4),
    MGMT_UNIT_TYPE_CODE VARCHAR2(1),
    LICENCE_TO_CUT_CODE VARCHAR2(2),
    HARVEST_TYPE_CODE VARCHAR2(1) NOT NULL,
    HARVEST_AUTH_STATUS_CODE VARCHAR2(3),
    TENURE_TERM NUMBER(5,0),
    STATUS_DATE DATE,
    ISSUE_DATE DATE,
    EXPIRY_DATE DATE,
    EXTEND_DATE DATE,
    EXTEND_COUNT NUMBER(10,0),
    HARVEST_AUTH_EXTEND_REAS_CODE VARCHAR2(1),
    QUOTA_TYPE_CODE VARCHAR2(1),
    CROWN_LANDS_REGION_CODE VARCHAR2(1),
    SALVAGE_TYPE_CODE VARCHAR2(3),
    CASCADE_SPLIT_CODE VARCHAR2(1),
    CATASTROPHIC_IND VARCHAR2(1),
    CROWN_GRANTED_IND VARCHAR2(1) NOT NULL,
    CRUISE_BASED_IND VARCHAR2(1) NOT NULL,
    DECIDUOUS_IND VARCHAR2(1) NOT NULL,
    BCAA_FOLIO_NUMBER VARCHAR2(23),
    LOCATION VARCHAR2(100),
    HIGHER_LEVEL_PLAN_REFERENCE VARCHAR2(30),
    HARVEST_AREA NUMBER(11,4),
    RETIREMENT_DATE DATE,
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    IS_WASTE_ASSESSMENT_REQUIRED VARCHAR2(1) NOT NULL,
    IS_CP_EXTENSN_APPL_FEE_WAIVED VARCHAR2(1) NOT NULL,
    IS_CP_EXTENSION_APPL_FEE_PAID VARCHAR2(1) NOT NULL,
    IS_WITHIN_FIBRE_RECOVERY_ZONE VARCHAR2(1) NOT NULL,
    HARVESTING_AUTHORITY_GUID RAW(16) NOT NULL
);

-- Explicit CHECK constraints
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0067187 CHECK (IS_WASTE_ASSESSMENT_REQUIRED IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0067188 CHECK (IS_CP_EXTENSN_APPL_FEE_WAIVED IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0067189 CHECK (IS_CP_EXTENSION_APPL_FEE_PAID IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0067190 CHECK (IS_WITHIN_FIBRE_RECOVERY_ZONE IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT HVA_IS_WASTE_ASSESS_REQ_CK CHECK (IS_WASTE_ASSESSMENT_REQUIRED IN ('Y', 'N', 'U'));
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT HVA_IS_CP_EXT_APPL_FEE_WA_CK CHECK (IS_CP_EXTENSN_APPL_FEE_WAIVED IN ('Y', 'N', 'U'));
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT HVA_IS_CP_EXT_APPL_FEE_PA_CK CHECK (IS_CP_EXTENSION_APPL_FEE_PAID IN ('Y', 'N', 'U'));
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT HVA_IS_WITHIN_FRZ_CK CHECK (IS_WITHIN_FIBRE_RECOVERY_ZONE IN ('Y', 'N', 'U'));
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C00111795 CHECK (HARVESTING_AUTHORITY_GUID IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT AVCON_1148331360_CATAS_000 CHECK (CATASTROPHIC_IND IN ('N', 'Y'));
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT AVCON_1148331360_CROWN_000 CHECK (CROWN_GRANTED_IND IN ('N', 'Y'));
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT AVCON_1148331360_CRUIS_000 CHECK (CRUISE_BASED_IND IN ('N', 'Y'));
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT AVCON_1148331360_DECID_000 CHECK (DECIDUOUS_IND IN ('N', 'Y'));
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028615 CHECK (HVA_SKEY IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028616 CHECK (FOREST_FILE_ID IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028617 CHECK (FOREST_DISTRICT IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028618 CHECK (GEOGRAPHIC_DISTRICT IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028620 CHECK (HARVEST_TYPE_CODE IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028622 CHECK (CROWN_GRANTED_IND IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028624 CHECK (CRUISE_BASED_IND IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028626 CHECK (DECIDUOUS_IND IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028628 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028629 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028630 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028631 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT SYS_C0028632 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE HARVESTING_AUTHORITY ADD CONSTRAINT HVA_PK PRIMARY KEY (HVA_SKEY);

-- Unique Indexes
CREATE UNIQUE INDEX HVA_GUID_UK ON HARVESTING_AUTHORITY (HARVESTING_AUTHORITY_GUID);
CREATE UNIQUE INDEX HVA_FF_CP_HVAID_UK ON HARVESTING_AUTHORITY (FOREST_FILE_ID, CUTTING_PERMIT_ID, HARVESTING_AUTHORITY_ID);

-- Non-unique Indexes
CREATE INDEX HVA_OU_FK_I ON HARVESTING_AUTHORITY (FOREST_DISTRICT);
CREATE INDEX HVA_LTCCD_FK_I ON HARVESTING_AUTHORITY (LICENCE_TO_CUT_CODE);
CREATE INDEX HVA_FF_CP_I ON HARVESTING_AUTHORITY (FOREST_FILE_ID, CUTTING_PERMIT_ID);
CREATE INDEX HVA_I1 ON HARVESTING_AUTHORITY (HARVEST_TYPE_CODE);

-- Foreign keys (to be added separately)-- DDL migration for WASTE_ASSESSMENT_SURVEY_MAP (DBeaver style)
CREATE TABLE WASTE_ASSESSMENT_SURVEY_MAP (
    WASTE_ASSESSMENT_AREA_ID NUMBER(12,0) NOT NULL,
    SURVEY_MAP_DOCUMENT BLOB,
    WASTE_ASSESSMENT_SURVEY_MAP_ID NUMBER(12,0) NOT NULL,
    SURVEY_MAP_DOCUMENT_NAME VARCHAR2(50) NOT NULL,
    SURVEY_MAP_MIME_TYPE_CODE VARCHAR2(3),
    WASTE_ASSESS_AREA_STS_CODE VARCHAR2(4) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL
);

-- Explicit CHECK constraints
ALTER TABLE WASTE_ASSESSMENT_SURVEY_MAP ADD CONSTRAINT SYS_C00326671 CHECK (WASTE_ASSESSMENT_SURVEY_MAP_ID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SURVEY_MAP ADD CONSTRAINT SYS_C00326672 CHECK (SURVEY_MAP_DOCUMENT_NAME IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SURVEY_MAP ADD CONSTRAINT SYS_C00326673 CHECK (WASTE_ASSESS_AREA_STS_CODE IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SURVEY_MAP ADD CONSTRAINT SYS_C00326674 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SURVEY_MAP ADD CONSTRAINT SYS_C00326675 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_SURVEY_MAP ADD CONSTRAINT SYS_C0033000 CHECK (WASTE_ASSESSMENT_AREA_ID IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_ASSESSMENT_SURVEY_MAP ADD CONSTRAINT WAM_PK PRIMARY KEY (WASTE_ASSESSMENT_SURVEY_MAP_ID);

-- Unique Index

-- Non-unique Indexes
CREATE INDEX WAM_WAA_FK_I ON WASTE_ASSESSMENT_SURVEY_MAP (WASTE_ASSESSMENT_AREA_ID);

-- Foreign keys (to be added separately)-- DDL migration for WASTE_ASSESSMENT_AREA (DBeaver style)
CREATE TABLE WASTE_ASSESSMENT_AREA (
    WASTE_ASSESSMENT_AREA_ID NUMBER(12,0) NOT NULL,
    PARENT_WAA_ID NUMBER(12,0),
    REPORTING_UNIT_ID NUMBER(12,0) NOT NULL,
    FOREST_FILE_ID VARCHAR2(10) NOT NULL,
    TIMBER_MARK VARCHAR2(6),
    CB_SKEY NUMBER(10,0),
    WASTE_MATURITY_TYPE_CODE VARCHAR2(8),
    WASTE_CONDITION_TYPE_CODE VARCHAR2(3),
    WASTE_SITE_TYPE_CODE VARCHAR2(2),
    WASTE_HARVEST_STATUS_CODE VARCHAR2(4),
    WASTE_NET_AREA NUMBER(5,2) NOT NULL,
    MARK_AREA NUMBER(5,2),
    REMAINING_HARVEST_AREA NUMBER(5,2),
    YEAR_LOGGED_FROM NUMBER(4,0),
    YEAR_LOGGED_TO NUMBER(4,0),
    PRIMARY_LOGGING_COMPLETE_DATE DATE,
    ASSESS_STATUS_CHANGE_DATE DATE,
    BENCHMARK_VOLUME NUMBER(2,0),
    WASTE_SURVEYOR_LICENCE VARCHAR2(4),
    RETURN_NUMBER VARCHAR2(4),
    WASTE_ROADS_AREA NUMBER(4,2),
    SURVEY_DATE DATE,
    CRUISE_VOLUME NUMBER(4,0),
    WASTE_ASSESS_AREA_STS_CODE VARCHAR2(4) NOT NULL,
    SURVEY_MAP_DOCUMENT_NAME VARCHAR2(50),
    SURVEY_MAP_MIME_TYPE_CODE VARCHAR2(3),
    PARENT_BLOCK_IND VARCHAR2(1) DEFAULT 'N' NOT NULL,
    CHILD_BLOCK_IND VARCHAR2(1) DEFAULT 'N' NOT NULL,
    MULTI_MARK_IND VARCHAR2(1) DEFAULT 'N' NOT NULL,
    WASTE_PARENT_BLOCK_TYPE_CODE VARCHAR2(2),
    DOCUMENT_CONTROL_NUMBER NUMBER(10,0),
    HBS_EDIT_ERR_MESSAGE_CODE VARCHAR2(6),
    HBS_EDIT_ERR_CATEGORY_CODE VARCHAR2(3),
    DRAFT_TIMBER_MARK VARCHAR2(10),
    DRAFT_CUTTING_PERMIT_ID VARCHAR2(3),
    DRAFT_CUT_BLOCK_ID VARCHAR2(10),
    CUTTING_PERMIT_ID VARCHAR2(3),
    CUT_BLOCK_ID VARCHAR2(10),
    WASTE_SURVEY_CHECK_CODE VARCHAR2(3),
    NUMBER_OF_PLOTS_CHECKED NUMBER(3,0),
    WASTE_AREA_RISK_RATING_CODE VARCHAR2(3),
    INVOICE_NOTATION VARCHAR2(80),
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    ERROR_EMAIL_TIMESTAMP DATE,
    OBLIGATION_ADJUSTMENT NUMBER(5,2),
    WASTE_FIBRE_RECOVERY_ZONE_RATE VARCHAR2(1)
);

-- Explicit CHECK constraints
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020713 CHECK (WASTE_ASSESSMENT_AREA_ID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020714 CHECK (REPORTING_UNIT_ID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020715 CHECK (FOREST_FILE_ID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020716 CHECK (WASTE_NET_AREA IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020717 CHECK (WASTE_ASSESS_AREA_STS_CODE IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020718 CHECK (PARENT_BLOCK_IND IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020719 CHECK (CHILD_BLOCK_IND IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020720 CHECK (MULTI_MARK_IND IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020721 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020722 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020723 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020724 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT SYS_C0020725 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_ASSESSMENT_AREA ADD CONSTRAINT WAA_PK PRIMARY KEY (WASTE_ASSESSMENT_AREA_ID);

-- Unique Index

-- Non-unique Indexes
CREATE INDEX WAA_CBLK_FK_I ON WASTE_ASSESSMENT_AREA (CB_SKEY);
CREATE INDEX WAA_HAA_FK_I ON WASTE_ASSESSMENT_AREA (FOREST_FILE_ID);
CREATE INDEX WAA_HEEMC_FK_I ON WASTE_ASSESSMENT_AREA (HBS_EDIT_ERR_MESSAGE_CODE);
CREATE INDEX WAA_MTC_FK_I ON WASTE_ASSESSMENT_AREA (WASTE_MATURITY_TYPE_CODE);
CREATE INDEX WAA_SITC_FK_I ON WASTE_ASSESSMENT_AREA (WASTE_SITE_TYPE_CODE);
CREATE INDEX WAA_WAASC_FK_I ON WASTE_ASSESSMENT_AREA (WASTE_ASSESS_AREA_STS_CODE);
CREATE INDEX WAA_WCTC_FK_I ON WASTE_ASSESSMENT_AREA (WASTE_CONDITION_TYPE_CODE);
CREATE INDEX WAA_WRU_FK_I ON WASTE_ASSESSMENT_AREA (REPORTING_UNIT_ID);
CREATE INDEX WAA_WSCC_FK_I_1 ON WASTE_ASSESSMENT_AREA (WASTE_SURVEY_CHECK_CODE);

-- Foreign keys (to be added separately)
CREATE TABLE THE.FOREST_CLIENT (
	CLIENT_NUMBER VARCHAR2(8) NOT NULL,
	CLIENT_NAME VARCHAR2(60) NOT NULL,
	LEGAL_FIRST_NAME VARCHAR2(30) NULL,
	LEGAL_MIDDLE_NAME VARCHAR2(30) NULL,
	CLIENT_STATUS_CODE VARCHAR2(3) NOT NULL,
	CLIENT_TYPE_CODE VARCHAR2(1) NOT NULL,
	BIRTHDATE DATE NULL,
	CLIENT_ID_TYPE_CODE VARCHAR2(4) NULL,
	CLIENT_IDENTIFICATION VARCHAR2(40) NULL,
	REGISTRY_COMPANY_TYPE_CODE VARCHAR2(4) NULL,
	CORP_REGN_NMBR VARCHAR2(9) NULL,
	CLIENT_ACRONYM VARCHAR2(8) NULL,
	WCB_FIRM_NUMBER VARCHAR2(6) NULL,
	OCG_SUPPLIER_NMBR VARCHAR2(10) NULL,
	CLIENT_COMMENT VARCHAR2(4000) NULL,
	ADD_TIMESTAMP DATE NOT NULL,
	ADD_USERID VARCHAR2(30) NOT NULL,
	ADD_ORG_UNIT NUMBER(10,0) NOT NULL,
	UPDATE_TIMESTAMP DATE NOT NULL,
	UPDATE_USERID VARCHAR2(30) NOT NULL,
	UPDATE_ORG_UNIT NUMBER(10,0) NOT NULL,
	REVISION_COUNT NUMBER(5,0) NOT NULL,
	CONSTRAINT FOREST_CLIENT_PK PRIMARY KEY (CLIENT_NUMBER),
	CONSTRAINT SYS_C0029588_FC_CT CHECK ("CLIENT_NUMBER" IS NOT NULL),
	CONSTRAINT SYS_C0029589_FC_CT CHECK ("CLIENT_NAME" IS NOT NULL),
	CONSTRAINT SYS_C0029590_FC_CT CHECK ("CLIENT_STATUS_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0029591_FC_CT CHECK ("CLIENT_TYPE_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0029592_FC_CT CHECK ("ADD_TIMESTAMP" IS NOT NULL),
	CONSTRAINT SYS_C0029593_FC_CT CHECK ("ADD_USERID" IS NOT NULL),
	CONSTRAINT SYS_C0029594_FC_CT CHECK ("ADD_ORG_UNIT" IS NOT NULL),
	CONSTRAINT SYS_C0029595_FC_CT CHECK ("UPDATE_TIMESTAMP" IS NOT NULL),
	CONSTRAINT SYS_C0029596_FC_CT CHECK ("UPDATE_USERID" IS NOT NULL),
	CONSTRAINT SYS_C0029597_FC_CT CHECK ("UPDATE_ORG_UNIT" IS NOT NULL),
	CONSTRAINT SYS_C0029598_FC_CT CHECK ("REVISION_COUNT" IS NOT NULL)
);
CREATE UNIQUE INDEX FC_ACRONYM_I ON THE.FOREST_CLIENT (CLIENT_ACRONYM);
CREATE INDEX FC_CITC_FK_I ON THE.FOREST_CLIENT (CLIENT_ID_TYPE_CODE);
CREATE INDEX FC_CSC_FK_I ON THE.FOREST_CLIENT (CLIENT_STATUS_CODE);
CREATE INDEX FC_CTCX_FK_I ON THE.FOREST_CLIENT (CLIENT_TYPE_CODE,REGISTRY_COMPANY_TYPE_CODE);
CREATE INDEX FC_OU_FK_I ON THE.FOREST_CLIENT (ADD_ORG_UNIT);
CREATE INDEX FC_OU_IS_UPDATED_BY_FK_I ON THE.FOREST_CLIENT (UPDATE_ORG_UNIT);
CREATE UNIQUE INDEX "I2$_FOREST_CLIENT" ON THE.FOREST_CLIENT (CLIENT_NAME,LEGAL_FIRST_NAME,LEGAL_MIDDLE_NAME,CLIENT_NUMBER);
CREATE INDEX "I4$_FOREST_CLIENT" ON THE.FOREST_CLIENT (OCG_SUPPLIER_NMBR);
CREATE INDEX "I5$_FOREST_CLIENT" ON THE.FOREST_CLIENT (CORP_REGN_NMBR);-- DDL migration for LOG_TALLY (DBeaver style)
CREATE TABLE LOG_TALLY (
    DETAIL_DOCUMENT_NUMBER VARCHAR2(13) NOT NULL,
    VERSION NUMBER(2,0) NOT NULL,
    BATDOC_ID NUMBER(32,0),
    SCALE_EVENT_TYPE_CODE VARCHAR2(2) NOT NULL,
    SCL_RTN_VERSION_STATE_CODE VARCHAR2(3) NOT NULL,
    SCALE_DATE DATE NOT NULL,
    SCALE_SITE_ID_NMBR VARCHAR2(4),
    CUT_BLOCK_ID VARCHAR2(10),
    TIMBER_MARK VARCHAR2(6),
    TIMBER_BRAND VARCHAR2(7),
    PRIMARY_QUANT_LIC_TYPE_CD VARCHAR2(1),
    PRIMARY_LICENSE_NUMBER VARCHAR2(4),
    SECONDARY_QUANT_LIC_TYPE_CD VARCHAR2(1),
    SECONDARY_LICENSE_NUMBER VARCHAR2(4),
    SIGNING_QUANT_LIC_TYPE_CD VARCHAR2(1),
    SIGNING_LICENSE_NUMBER VARCHAR2(4),
    RETURN_NUMBER NUMBER(4,0) NOT NULL,
    LOG_COUNT NUMBER(4,0) NOT NULL,
    NET_VOLUME NUMBER(7,3),
    PARCEL_COUNT NUMBER(1,0),
    PARCEL_IDENTIFIER NUMBER(1,0),
    VOLUME_CALC_METHOD_TYPE VARCHAR2(1),
    ORIG_CHK_SCL_QUANT_LIC_TYPE_CD VARCHAR2(1),
    ORIGINAL_DDN VARCHAR2(13),
    ORIGINAL_DDV NUMBER(2,0),
    ORIG_CHK_SCL_LICENSE_NUMBER VARCHAR2(4),
    ORIG_CHK_SCL_RETURN_NUMBER NUMBER(4,0),
    ORIG_REDTAG_SCALE_SITE_ID_NMBR VARCHAR2(4),
    RED_TAG_WEIGH_SLIP VARCHAR2(10),
    ORIGINAL_VERSION_IND VARCHAR2(1) NOT NULL,
    VALID_SIGNATURE_IND VARCHAR2(1) NOT NULL,
    ACTIVE_VERSION_IND VARCHAR2(1) NOT NULL,
    BEACHCOMB_IND VARCHAR2(1),
    CHECK_REPLACES_ORIGINAL_IND VARCHAR2(1),
    FIELD_SCALE_IND VARCHAR2(1),
    FIELD_SCALE_DECK_ID VARCHAR2(1),
    TRANSPORT_IDENTIFIER VARCHAR2(16),
    INCOMING_LDS_NUMBER VARCHAR2(10),
    LOAD_ARRIVAL_NUMBER VARCHAR2(10),
    LOG_TALLY_COMMENT VARCHAR2(240),
    DTL_DOC_SEQ NUMBER(32,0) NOT NULL,
    INPUT_ORIG_REDTAG_SCL_SITE VARCHAR2(4),
    INPUT_SECONDARY_SCALER_LIC VARCHAR2(4),
    INPUT_SIGNING_SCALER_LIC VARCHAR2(4),
    INPUT_CUTBLOCK_ID VARCHAR2(10),
    INPUT_PRIMARY_SCALER_LIC VARCHAR2(4),
    INPUT_ORIGINAL_DDN VARCHAR2(13),
    INPUT_ORIGINAL_DDV NUMBER(2,0),
    INPUT_ORIG_CHK_SCL_SCALER_LIC VARCHAR2(4),
    INPUT_SOURCE VARCHAR2(7),
    INPUT_SCALE_SITE VARCHAR2(4),
    ENCRYPTED_SIGNATURE RAW(512),
    HBS_ENCR_KEY_ID NUMBER(2,0),
    INPUT_HBS_ENCR_KEY_ID NUMBER(2,0),
    HBS_RSA_PADDING_ID NUMBER(2,0),
    DECRYPTED_SIGNATURE VARCHAR2(128),
    HASH_TOTAL VARCHAR2(128),
    HBS_CRYPT_METHOD_ID NUMBER(2,0),
    SIGNING_DATE_TIME DATE,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30),
    UPDATE_TIMESTAMP DATE
);

-- Explicit CHECK constraints
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017800 CHECK (DETAIL_DOCUMENT_NUMBER IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017801 CHECK (VERSION IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017802 CHECK (SCALE_EVENT_TYPE_CODE IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017803 CHECK (SCL_RTN_VERSION_STATE_CODE IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017804 CHECK (SCALE_DATE IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017805 CHECK (RETURN_NUMBER IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017806 CHECK (LOG_COUNT IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017807 CHECK (ORIGINAL_VERSION_IND IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017808 CHECK (VALID_SIGNATURE_IND IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017809 CHECK (ACTIVE_VERSION_IND IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017810 CHECK (DTL_DOC_SEQ IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017811 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0017812 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0039571 CHECK (ACTIVE_VERSION_IND IN ('Y', 'N'));
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0039572 CHECK (BEACHCOMB_IND IN ('Y', 'N'));
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0039573 CHECK (CHECK_REPLACES_ORIGINAL_IND IN ('Y', 'N'));
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0039574 CHECK (FIELD_SCALE_IND IN ('Y', 'N'));
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0039575 CHECK (ORIGINAL_VERSION_IND IN ('Y', 'N'));
ALTER TABLE LOG_TALLY ADD CONSTRAINT SYS_C0039576 CHECK (VOLUME_CALC_METHOD_TYPE IN ('G', 'N'));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$LOGTAL_ORGDDNDDV CHECK ((ORIGINAL_DDV IS NULL AND ORIGINAL_DDN IS  NULL) OR (ORIGINAL_DDV IS NOT NULL AND ORIGINAL_DDN IS NOT NULL AND SCALE_EVENT_TYPE_CODE = 'CS'));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$05_LOG_TALLY_CUT_BLK_ID CHECK (BATDOC_ID IS NULL OR (INPUT_CUTBLOCK_ID IS NULL AND SCALE_EVENT_TYPE_CODE IN ( 'FD','4R','CU' )) OR (INPUT_CUTBLOCK_ID IS NOT NULL AND SCALE_EVENT_TYPE_CODE NOT IN ( 'FD','4R','CU' )));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$17_LOG_TALLY_BCOMB_IND CHECK (BEACHCOMB_IND IS NULL AND SCALE_EVENT_TYPE_CODE IN ( '4R', 'CU' ) OR (BEACHCOMB_IND IS NOT NULL AND SCALE_EVENT_TYPE_CODE NOT IN ( '4R', 'CU' )));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$01_LOG_TALLY_LD_ARVL_NO CHECK (LOAD_ARRIVAL_NUMBER IS NULL AND SCALE_EVENT_TYPE_CODE IN ( 'RT', 'CS', 'CU' ) OR (LOAD_ARRIVAL_NUMBER IS NOT NULL AND SCALE_EVENT_TYPE_CODE NOT IN ( 'RT', 'CS', 'CU' )));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$02_LOG_TALLY_IN_LDS_NO CHECK (INCOMING_LDS_NUMBER IS NOT NULL AND SCALE_EVENT_TYPE_CODE NOT IN ( 'FD', 'RT', 'CS', 'CU' ) OR (INCOMING_LDS_NUMBER IS NULL AND SCALE_EVENT_TYPE_CODE IN ( 'FD', 'RT', 'CS', 'CU' )));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$03_LOG_TALLY_TRANS_ID CHECK (TRANSPORT_IDENTIFIER IS NULL AND SCALE_EVENT_TYPE_CODE IN ( 'FD', 'RT', 'CS', 'CU' ) OR (TRANSPORT_IDENTIFIER IS NOT NULL AND SCALE_EVENT_TYPE_CODE NOT IN ( 'FD', 'RT', 'CS', 'CU' ) ));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$04_LOG_TALLY_SOURCE CHECK ((BATDOC_ID IS NULL OR (INPUT_SOURCE IS NULL AND SCALE_EVENT_TYPE_CODE IN ( 'DP', 'CU' )) OR (INPUT_SOURCE IS NOT NULL AND SCALE_EVENT_TYPE_CODE NOT IN ( 'DP', 'CU' ))) AND ((TIMBER_MARK IS NULL AND TIMBER_BRAND IS NULL ) OR (TIMBER_MARK IS NOT NULL AND TIMBER_BRAND IS NULL ) OR (TIMBER_MARK IS NULL AND TIMBER_BRAND IS NOT NULL )));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$06_LOG_TALLY_FLD_SCL_IND CHECK (FIELD_SCALE_IND IS NULL AND SCALE_EVENT_TYPE_CODE IN ( '4R', 'CU' ) OR (FIELD_SCALE_IND IS NOT NULL AND SCALE_EVENT_TYPE_CODE NOT IN ( '4R', 'CU' )));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$07_LOG_TALLY_FLD_SCL_DK_ID CHECK (FIELD_SCALE_IND IS NULL AND SCALE_EVENT_TYPE_CODE IN ( '4R', 'CU' ) OR (SCALE_EVENT_TYPE_CODE NOT IN ( '4R', 'CU' ) ));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$08_LOG_TALLY_WEIGH_SLIP_NO CHECK (RED_TAG_WEIGH_SLIP IS NULL AND SCALE_EVENT_TYPE_CODE IN ( 'PS', 'FD', 'CS', '4R', 'CU' ) OR (RED_TAG_WEIGH_SLIP IS NOT NULL AND SCALE_EVENT_TYPE_CODE NOT IN ( 'PS', 'FD', 'CS', '4R', 'CU' )));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$09_LOG_TALLY_ORIG_RT_SITE CHECK (BATDOC_ID IS NULL OR (INPUT_ORIG_REDTAG_SCL_SITE IS NULL AND SCALE_EVENT_TYPE_CODE IN ( 'PS', 'FD', 'RT', 'CS', '4R', 'CU' )) OR (INPUT_ORIG_REDTAG_SCL_SITE IS NOT NULL AND SCALE_EVENT_TYPE_CODE NOT IN ( 'PS', 'FD', 'RT', 'CS', '4R', 'CU' )));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$10_LOG_TALLY_PARCEL_COUNT CHECK (PARCEL_COUNT IS NULL AND SCALE_EVENT_TYPE_CODE IN ( 'FD', 'CS', 'CU' ) OR (SCALE_EVENT_TYPE_CODE NOT IN ( 'FD', 'CS', 'CU' )));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$11_LOG_TALLY_PARCEL_ID CHECK (PARCEL_IDENTIFIER IS NULL AND SCALE_EVENT_TYPE_CODE IN ( 'FD', 'CS', 'CU' ) OR (SCALE_EVENT_TYPE_CODE NOT IN ( 'FD', 'CS', 'CU' )));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$12_LOG_TALLY_ORIG_SCLR_LIC CHECK (BATDOC_ID IS NULL OR (INPUT_ORIG_CHK_SCL_SCALER_LIC IS NULL AND SCALE_EVENT_TYPE_CODE <> 'CS' ) OR (INPUT_ORIG_CHK_SCL_SCALER_LIC IS NOT NULL AND SCALE_EVENT_TYPE_CODE = 'CS' ));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$13_LOG_TALLY_ORIG_RET_NO CHECK (ORIG_CHK_SCL_RETURN_NUMBER IS NULL AND SCALE_EVENT_TYPE_CODE <> 'CS' OR (ORIG_CHK_SCL_RETURN_NUMBER IS NOT NULL AND SCALE_EVENT_TYPE_CODE = 'CS' ));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$15_LOG_TALLY_SCL_MTHD CHECK (VOLUME_CALC_METHOD_TYPE IS NULL AND SCALE_EVENT_TYPE_CODE IN ('4R', 'CU') OR (VOLUME_CALC_METHOD_TYPE IS NOT NULL AND SCALE_EVENT_TYPE_CODE NOT IN ('4R', 'CU')));
ALTER TABLE LOG_TALLY ADD CONSTRAINT C$16_LOG_TALLY_LOG_COUNT CHECK (LOG_COUNT = 0 AND SCALE_EVENT_TYPE_CODE IN ( '4R', 'CU' ) OR (LOG_COUNT > 0 AND SCALE_EVENT_TYPE_CODE NOT IN ( '4R', 'CU' ) ));

-- Primary Key
ALTER TABLE LOG_TALLY ADD CONSTRAINT LOG_TALLY_PK PRIMARY KEY (DETAIL_DOCUMENT_NUMBER, VERSION);

-- Unique Index

-- Non-unique Indexes
CREATE INDEX I3$_LOG_TALLY ON LOG_TALLY (DETAIL_DOCUMENT_NUMBER);
CREATE INDEX LOGTALLY_BATDOC_FK_I ON LOG_TALLY (BATDOC_ID);
CREATE INDEX LOGTALLY_MOF_SS_FK_I ON LOG_TALLY (SCALE_SITE_ID_NMBR);
CREATE INDEX LOGTALLY_MOF_TM_FK_I ON LOG_TALLY (TIMBER_MARK);
CREATE INDEX LOGTALLY_ORIG_CHK_SCL_QL_FK_I ON LOG_TALLY (ORIG_CHK_SCL_QUANT_LIC_TYPE_CD);
CREATE INDEX LOGTALLY_ORIG_REDTAG_SS_FK_I ON LOG_TALLY (ORIG_REDTAG_SCALE_SITE_ID_NMBR);
CREATE INDEX LOGTALLY_PRIMARY_QL_FK_I ON LOG_TALLY (PRIMARY_QUANT_LIC_TYPE_CD);
CREATE INDEX LOGTALLY_SETC_FK_I ON LOG_TALLY (SCL_RTN_VERSION_STATE_CODE);
CREATE INDEX LOGTALLY_VER_STATUS_FK_I ON LOG_TALLY (ACTIVE_VERSION_IND);
CREATE INDEX LOG_TALLY_HRPS_FK_I ON LOG_TALLY (HBS_RSA_PADDING_ID);
CREATE INDEX LOG_TALLY_HCM_FK_I ON LOG_TALLY (HBS_CRYPT_METHOD_ID);
CREATE INDEX LOG_TALLY_HEK_FK1_I ON LOG_TALLY (HBS_ENCR_KEY_ID);

-- Foreign keys (to be added separately)-- DDL migration for MOF_USER_ORG_DEFAULT (DBeaver style)
CREATE TABLE MOF_USER_ORG_DEFAULT (
    APPLICATION_ACRONYM VARCHAR2(30) NOT NULL,
    USER_ID VARCHAR2(30) NOT NULL,
    ORG_UNIT_NO NUMBER(10,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    REVISION_COUNT NUMBER(5,0) NOT NULL
);

-- Explicit CHECK constraints
ALTER TABLE MOF_USER_ORG_DEFAULT ADD CONSTRAINT SYS_C0018719 CHECK (APPLICATION_ACRONYM IS NOT NULL);
ALTER TABLE MOF_USER_ORG_DEFAULT ADD CONSTRAINT SYS_C0018720 CHECK (USER_ID IS NOT NULL);
ALTER TABLE MOF_USER_ORG_DEFAULT ADD CONSTRAINT SYS_C0018721 CHECK (ORG_UNIT_NO IS NOT NULL);
ALTER TABLE MOF_USER_ORG_DEFAULT ADD CONSTRAINT SYS_C0018722 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE MOF_USER_ORG_DEFAULT ADD CONSTRAINT SYS_C0018724 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE MOF_USER_ORG_DEFAULT ADD CONSTRAINT SYS_C0018725 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE MOF_USER_ORG_DEFAULT ADD CONSTRAINT SYS_C0018726 CHECK (UPDATE_TIMESTAMP IS NOT NULL);
ALTER TABLE MOF_USER_ORG_DEFAULT ADD CONSTRAINT SYS_C0018727 CHECK (REVISION_COUNT IS NOT NULL);

-- Primary Key
ALTER TABLE MOF_USER_ORG_DEFAULT ADD CONSTRAINT MUOD_PK PRIMARY KEY (APPLICATION_ACRONYM, USER_ID);

-- Unique Index
CREATE UNIQUE INDEX MUOD_UK ON MOF_USER_ORG_DEFAULT (APPLICATION_ACRONYM, USER_ID, ORG_UNIT_NO);

-- No foreign keys found
-- DDL migration for WASTE_TYPE_STRATUM_XREF (DBeaver style)
CREATE TABLE WASTE_TYPE_STRATUM_XREF (
    WASTE_TYPE_CODE VARCHAR2(3) NOT NULL,
    WASTE_STRATUM_TYPE_CODE VARCHAR2(3) NOT NULL
);

-- Explicit CHECK constraints
ALTER TABLE WASTE_TYPE_STRATUM_XREF ADD CONSTRAINT SYS_C0027875 CHECK (WASTE_TYPE_CODE IS NOT NULL);
ALTER TABLE WASTE_TYPE_STRATUM_XREF ADD CONSTRAINT SYS_C0027877 CHECK (WASTE_STRATUM_TYPE_CODE IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_TYPE_STRATUM_XREF ADD CONSTRAINT WTSX_PK PRIMARY KEY (WASTE_TYPE_CODE, WASTE_STRATUM_TYPE_CODE);

-- Unique Index

-- Non-unique Indexes
CREATE INDEX WTSX_WSTC_FK_I ON WASTE_TYPE_STRATUM_XREF (WASTE_STRATUM_TYPE_CODE);
CREATE INDEX WTSX_WTC_FK_I ON WASTE_TYPE_STRATUM_XREF (WASTE_TYPE_CODE);

-- Foreign keys (to be added separately)-- DDL migration for SPECIAL_FOREST_PRODUCT_TALLY (DBeaver style)
CREATE TABLE SPECIAL_FOREST_PRODUCT_TALLY (
    DETAIL_DOCUMENT_NUMBER VARCHAR2(13) NOT NULL,
    VERSION NUMBER(2,0) NOT NULL,
    BATDOC_ID NUMBER(32,0),
    SCL_RTN_VERSION_STATE_CODE VARCHAR2(3) NOT NULL,
    SCALE_EVENT_TYPE_CODE VARCHAR2(2) NOT NULL,
    HBS_SFP_SCALE_TYPE_CODE VARCHAR2(1) NOT NULL,
    SCALE_DATE DATE NOT NULL,
    SCALE_SITE_ID_NMBR VARCHAR2(4),
    CUT_BLOCK_ID VARCHAR2(10),
    TIMBER_MARK VARCHAR2(6),
    TIMBER_BRAND VARCHAR2(7),
    PRIMARY_QUANT_LIC_TYPE_CD VARCHAR2(1),
    PRIMARY_LICENSE_NUMBER VARCHAR2(4),
    SECONDARY_QUANT_LIC_TYPE_CD VARCHAR2(1),
    SECONDARY_LICENSE_NUMBER VARCHAR2(4),
    SIGNING_QUANT_LIC_TYPE_CD VARCHAR2(1),
    SIGNING_LICENSE_NUMBER VARCHAR2(4),
    RETURN_NUMBER NUMBER(4,0) NOT NULL,
    LOG_COUNT NUMBER(4,0) NOT NULL,
    NET_VOLUME NUMBER(7,3),
    PARCEL_COUNT NUMBER(1,0),
    PARCEL_IDENTIFIER NUMBER(1,0),
    VOLUME_CALC_METHOD_TYPE VARCHAR2(1),
    ORIG_CHK_SCL_QUANT_LIC_TYPE_CD VARCHAR2(1),
    ORIG_CHK_SCL_LICENSE_NUMBER VARCHAR2(4),
    ORIG_CHK_SCL_RETURN_NUMBER VARCHAR2(4),
    ORIGINAL_VERSION_IND VARCHAR2(1) NOT NULL,
    VALID_SIGNATURE_IND VARCHAR2(1) NOT NULL,
    ACTIVE_VERSION_IND VARCHAR2(1) NOT NULL,
    SAMPLE_PIECE_COUNT NUMBER(4,0),
    CHECK_REPLACES_ORIGINAL_IND VARCHAR2(1),
    FIELD_SCALE_DECK_ID VARCHAR2(1),
    FIELD_SCALE_IND VARCHAR2(1),
    TRANSPORT_IDENTIFIER VARCHAR2(16),
    INCOMING_LDS_NUMBER VARCHAR2(10),
    LOAD_ARRIVAL_NUMBER VARCHAR2(10),
    SFP_TALLY_COMMENT VARCHAR2(240),
    DTL_DOC_SEQ NUMBER(32,0) NOT NULL,
    INPUT_CUT_BLOCK_ID VARCHAR2(10),
    INPUT_SCALE_SITE VARCHAR2(4),
    INPUT_SOURCE VARCHAR2(7),
    INPUT_PRIMARY_SCALER_LIC VARCHAR2(4),
    INPUT_SECONDARY_SCALER_LIC VARCHAR2(4),
    INPUT_SIGNING_SCALER_LIC VARCHAR2(4),
    INPUT_ORIG_CHK_SCL_SCALER_LIC VARCHAR2(4),
    ENCRYPTED_SIGNATURE RAW(512),
    HBS_ENCR_KEY_ID NUMBER(2,0),
    INPUT_HBS_ENCR_KEY_ID NUMBER(2,0),
    HBS_RSA_PADDING_ID NUMBER(2,0),
    DECRYPTED_SIGNATURE VARCHAR2(128),
    HASH_TOTAL VARCHAR2(128),
    HBS_CRYPT_METHOD_ID NUMBER(2,0),
    SIGNING_DATE_TIME DATE,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30),
    UPDATE_TIMESTAMP DATE
);

-- Explicit CHECK constraints
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017706 CHECK (DETAIL_DOCUMENT_NUMBER IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017707 CHECK (VERSION IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017708 CHECK (SCL_RTN_VERSION_STATE_CODE IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017709 CHECK (SCALE_EVENT_TYPE_CODE IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017710 CHECK (HBS_SFP_SCALE_TYPE_CODE IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017711 CHECK (SCALE_DATE IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017712 CHECK (RETURN_NUMBER IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017713 CHECK (LOG_COUNT IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017714 CHECK (ORIGINAL_VERSION_IND IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017715 CHECK (VALID_SIGNATURE_IND IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017716 CHECK (ACTIVE_VERSION_IND IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017717 CHECK (DTL_DOC_SEQ IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017718 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017719 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0039138 CHECK (ACTIVE_VERSION_IND IN ('Y', 'N'));
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0039139 CHECK (CHECK_REPLACES_ORIGINAL_IND IN ('Y', 'N'));
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0039140 CHECK (ORIGINAL_VERSION_IND IN ('Y', 'N'));
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0039141 CHECK (VOLUME_CALC_METHOD_TYPE IN ('G', 'N'));

-- Primary Key
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SFPTALLY_PK PRIMARY KEY (DETAIL_DOCUMENT_NUMBER, VERSION);

-- Unique Index

-- Non-unique Indexes
CREATE INDEX SFPTALLY_SECONDARY_QL_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (SECONDARY_QUANT_LIC_TYPE_CD);
CREATE INDEX SFPTALLY_SIGNING_QL_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (SIGNING_QUANT_LIC_TYPE_CD);
CREATE INDEX SFPTALLY_PRIMARY_QL_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (PRIMARY_QUANT_LIC_TYPE_CD);
CREATE INDEX SFPTALLY_BATDOC_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (BATDOC_ID);
CREATE INDEX SFPTALLY_MOF_TM_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (TIMBER_MARK);
CREATE INDEX SFPTALLY_MOF_SS_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (SCALE_SITE_ID_NMBR);
CREATE INDEX SFPTALLY_MOF_CB_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (CUT_BLOCK_ID);
CREATE INDEX SFPTALLY_DTLSCLDOC_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (DTL_DOC_SEQ);
CREATE INDEX SFPTALLY_ORIG_CHK_SCL_QL_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (ORIG_CHK_SCL_QUANT_LIC_TYPE_CD);
CREATE INDEX SFPTALLY_HRPS_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (HBS_RSA_PADDING_ID);
CREATE INDEX SFPTALLY_HCM_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (HBS_CRYPT_METHOD_ID);
CREATE INDEX SFPTALLY_HEK_FK1_I ON SPECIAL_FOREST_PRODUCT_TALLY (HBS_ENCR_KEY_ID);

-- Foreign keys (to be added separately)-- DDL migration for CUT_BLOCK_OPEN_ADMIN (DBeaver style)
CREATE TABLE CUT_BLOCK_OPEN_ADMIN (
    CUT_BLOCK_OPEN_ADMIN_ID NUMBER(10,0) NOT NULL,
    FOREST_FILE_ID VARCHAR2(10),
    TIMBER_MARK VARCHAR2(10),
    CUT_BLOCK_ID VARCHAR2(10),
    CUTTING_PERMIT_ID VARCHAR2(3),
    DISTURBANCE_GROSS_AREA NUMBER(11,4),
    DISTURBANCE_START_DATE DATE,
    DISTURBANCE_END_DATE DATE,
    OPENING_ID NUMBER(10,0),
    OPENING_GROSS_AREA NUMBER(11,4),
    PLANNED_HARVEST_DATE DATE,
    PLANNED_GROSS_BLOCK_AREA NUMBER(11,4),
    PLANNED_NET_BLOCK_AREA NUMBER(11,4),
    OPENING_PRIME_LICENCE_IND VARCHAR2(1),
    CB_SKEY NUMBER(10,0),
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL
);

-- Explicit CHECK constraints
ALTER TABLE CUT_BLOCK_OPEN_ADMIN ADD CONSTRAINT SYS_C0012316 CHECK (CUT_BLOCK_OPEN_ADMIN_ID IS NOT NULL);
ALTER TABLE CUT_BLOCK_OPEN_ADMIN ADD CONSTRAINT SYS_C0012318 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE CUT_BLOCK_OPEN_ADMIN ADD CONSTRAINT SYS_C0012320 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE CUT_BLOCK_OPEN_ADMIN ADD CONSTRAINT SYS_C0012322 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE CUT_BLOCK_OPEN_ADMIN ADD CONSTRAINT SYS_C0012325 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE CUT_BLOCK_OPEN_ADMIN ADD CONSTRAINT SYS_C0012328 CHECK (UPDATE_TIMESTAMP IS NOT NULL);
ALTER TABLE CUT_BLOCK_OPEN_ADMIN ADD CONSTRAINT AVCON_1054232647_OPENI_000 CHECK (OPENING_PRIME_LICENCE_IND IN ('N', 'Y'));

-- Primary Key
ALTER TABLE CUT_BLOCK_OPEN_ADMIN ADD CONSTRAINT CBOA_PK PRIMARY KEY (CUT_BLOCK_OPEN_ADMIN_ID);

-- Indexes
CREATE INDEX CBOA_CBLK_FK_I ON CUT_BLOCK_OPEN_ADMIN (CUT_BLOCK_ID);
CREATE INDEX CBOA_CBSKEY_I ON CUT_BLOCK_OPEN_ADMIN (CB_SKEY);
CREATE INDEX CBOA_FFID_MARK_BLK_I ON CUT_BLOCK_OPEN_ADMIN (FOREST_FILE_ID, TIMBER_MARK, CUT_BLOCK_ID);
CREATE INDEX CBOA_MARK_BLK_I ON CUT_BLOCK_OPEN_ADMIN (TIMBER_MARK, CUT_BLOCK_ID);
CREATE INDEX CBOA_O_FK_I ON CUT_BLOCK_OPEN_ADMIN (OPENING_ID);

-- Foreign keys (to be added separately)-- DDL migration for CUT_BLOCK (DBeaver style)
CREATE TABLE CUT_BLOCK (
    CB_SKEY NUMBER(10,0) NOT NULL,
    HVA_SKEY NUMBER(10,0),
    FOREST_FILE_ID VARCHAR2(10) NOT NULL,
    CUTTING_PERMIT_ID VARCHAR2(3),
    TIMBER_MARK VARCHAR2(10),
    CUT_BLOCK_ID VARCHAR2(10) NOT NULL,
    SP_EXEMPT_IND VARCHAR2(1) DEFAULT 'N' NOT NULL,
    BLOCK_STATUS_DATE DATE,
    CUT_BLOCK_DESCRIPTION VARCHAR2(120),
    CUT_REGULATION_CODE VARCHAR2(3),
    BLOCK_STATUS_ST VARCHAR2(3) NOT NULL,
    REFOREST_DECLARE_TYPE_CODE VARCHAR2(3),
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    IS_WASTE_ASSESSMENT_REQUIRED VARCHAR2(1) DEFAULT 'U' NOT NULL,
    CUT_BLOCK_GUID RAW(16) DEFAULT SYS_GUID() NOT NULL,
    FIRE_HARVESTING_REASON_CODE VARCHAR2(10),
    IS_UNDER_PARTITION_ORDER VARCHAR2(1),
    REPORTED_FIRE_DATE DATE
);

-- Explicit CHECK constraints
ALTER TABLE CUT_BLOCK ADD CONSTRAINT SYS_C0012353 CHECK (CB_SKEY IS NOT NULL);
ALTER TABLE CUT_BLOCK ADD CONSTRAINT SYS_C0012356 CHECK (FOREST_FILE_ID IS NOT NULL);
ALTER TABLE CUT_BLOCK ADD CONSTRAINT SYS_C0012359 CHECK (CUT_BLOCK_ID IS NOT NULL);
ALTER TABLE CUT_BLOCK ADD CONSTRAINT SYS_C0012362 CHECK (SP_EXEMPT_IND IS NOT NULL);
ALTER TABLE CUT_BLOCK ADD CONSTRAINT AVCON_1054232647_SP_EX_000 CHECK (SP_EXEMPT_IND IN ('N', 'Y'));
ALTER TABLE CUT_BLOCK ADD CONSTRAINT SYS_C0012365 CHECK (BLOCK_STATUS_ST IS NOT NULL);
ALTER TABLE CUT_BLOCK ADD CONSTRAINT SYS_C0012368 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE CUT_BLOCK ADD CONSTRAINT SYS_C0012371 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE CUT_BLOCK ADD CONSTRAINT SYS_C0012373 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE CUT_BLOCK ADD CONSTRAINT SYS_C0012374 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE CUT_BLOCK ADD CONSTRAINT SYS_C0012375 CHECK (UPDATE_TIMESTAMP IS NOT NULL);
ALTER TABLE CUT_BLOCK ADD CONSTRAINT SYS_C00111793 CHECK (CUT_BLOCK_GUID IS NOT NULL);
ALTER TABLE CUT_BLOCK ADD CONSTRAINT SYS_C0067185 CHECK (IS_WASTE_ASSESSMENT_REQUIRED IS NOT NULL);
ALTER TABLE CUT_BLOCK ADD CONSTRAINT CBLK_IS_WASTE_ASSESS_REQ_CK CHECK (IS_WASTE_ASSESSMENT_REQUIRED IN ('Y', 'N', 'U'));

-- Primary Key
ALTER TABLE CUT_BLOCK ADD CONSTRAINT CBLK_PK PRIMARY KEY (CB_SKEY);

-- Unique Indexes

-- Non-unique Indexes
CREATE INDEX CBLK1_I ON CUT_BLOCK (FOREST_FILE_ID);
CREATE INDEX CBLK2_I ON CUT_BLOCK (TIMBER_MARK);
CREATE INDEX CBLK_FF_TM_CB_I ON CUT_BLOCK (FOREST_FILE_ID, TIMBER_MARK, CUT_BLOCK_ID);
CREATE INDEX CBLK_I ON CUT_BLOCK (CUT_BLOCK_ID);

-- Foreign keys (to be added separately)
-- DDL migration for WASTE_PLOT (DBeaver style)
CREATE TABLE WASTE_PLOT (
    WASTE_PLOT_ID NUMBER(12,0) NOT NULL,
    WASTE_STRATUM_ID NUMBER(12,0) NOT NULL,
    WASTE_PLOT_NUMBER NUMBER(3,0) NOT NULL,
    WASTE_BASELINE VARCHAR2(1),
    WASTE_STRIP NUMBER(2,0),
    MEASURE_FACTOR NUMBER(3,0) NOT NULL,
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    WASTE_SURVEYOR_LICENCE VARCHAR2(4)
);

-- Explicit CHECK constraints
ALTER TABLE WASTE_PLOT ADD CONSTRAINT SYS_C0027916 CHECK (WASTE_PLOT_ID IS NOT NULL);
ALTER TABLE WASTE_PLOT ADD CONSTRAINT SYS_C0027918 CHECK (WASTE_STRATUM_ID IS NOT NULL);
ALTER TABLE WASTE_PLOT ADD CONSTRAINT SYS_C0027920 CHECK (WASTE_PLOT_NUMBER IS NOT NULL);
ALTER TABLE WASTE_PLOT ADD CONSTRAINT SYS_C0027922 CHECK (MEASURE_FACTOR IS NOT NULL);
ALTER TABLE WASTE_PLOT ADD CONSTRAINT SYS_C0027924 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE WASTE_PLOT ADD CONSTRAINT SYS_C0027926 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_PLOT ADD CONSTRAINT SYS_C0027928 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_PLOT ADD CONSTRAINT SYS_C0027929 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE WASTE_PLOT ADD CONSTRAINT SYS_C0027931 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_PLOT ADD CONSTRAINT WPLO_PK PRIMARY KEY (WASTE_PLOT_ID);

-- Unique Indexes
CREATE UNIQUE INDEX WPLO_UK ON WASTE_PLOT (WASTE_STRATUM_ID, WASTE_PLOT_NUMBER);

-- Non-unique Indexes
CREATE INDEX WPLO_WSTR_FK_I ON WASTE_PLOT (WASTE_STRATUM_ID);

-- Foreign keys (to be added separately)
-- DDL migration for OPENING (DBeaver style)
CREATE TABLE OPENING (
    OPENING_ID NUMBER(10,0) NOT NULL,
    GEO_DISTRICT_NO NUMBER(10,0) NOT NULL,
    ADMIN_DISTRICT_NO NUMBER(10,0) NOT NULL,
    MAPSHEET_GRID VARCHAR2(3),
    MAPSHEET_LETTER VARCHAR2(1),
    MAPSHEET_SQUARE VARCHAR2(3),
    MAPSHEET_QUAD VARCHAR2(1),
    MAPSHEET_SUB_QUAD VARCHAR2(1),
    OPENING_NUMBER VARCHAR2(4),
    OPENING_LOCN_NAME VARCHAR2(30),
    OPEN_CATEGORY_CODE VARCHAR2(7) NOT NULL,
    LICENSEE_OPENING_ID VARCHAR2(30),
    TSB_NUMBER_CODE VARCHAR2(3),
    OPENING_STATUS_CODE VARCHAR2(3) NOT NULL,
    ORG_UNIT_NO NUMBER(10,0),
    DIST_ADMIN_ZONE VARCHAR2(2),
    MAX_ALLOW_PERMNT_ACCESS_PCT NUMBER(3,1),
    PREV_AGE_CLASS_CODE VARCHAR2(1),
    PREV_SITE_INDEX NUMBER(5,0),
    PREV_SITE_INDEX_SOURCE_CODE VARCHAR2(1),
    PREV_HEIGHT_CLASS_CODE VARCHAR2(1),
    PREV_SITE_CLASS_CODE VARCHAR2(1),
    PREV_STOCKING_CLASS_CODE VARCHAR2(1),
    PREV_STOCKING_STATUS_CODE VARCHAR2(3),
    PREV_TREE_SPP1_CODE VARCHAR2(8),
    PREV_TREE_SPP2_CODE VARCHAR2(8),
    APP_ENT_BY_USERID VARCHAR2(30),
    APPROVE_DATE DATE,
    AMENDMENT_IND VARCHAR2(1),
    RESULTS_SUBMISSION_ID NUMBER(10,0),
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    REVISION_COUNT NUMBER(5,0) NOT NULL
);

-- Explicit CHECK constraints
ALTER TABLE OPENING ADD CONSTRAINT O_C_SYS_C009157 CHECK (OPENING_ID IS NOT NULL);
ALTER TABLE OPENING ADD CONSTRAINT O_C_SYS_C009158 CHECK (GEO_DISTRICT_NO IS NOT NULL);
ALTER TABLE OPENING ADD CONSTRAINT O_C_SYS_C009160 CHECK (ADMIN_DISTRICT_NO IS NOT NULL);
ALTER TABLE OPENING ADD CONSTRAINT O_C_SYS_C009162 CHECK (OPEN_CATEGORY_CODE IS NOT NULL);
ALTER TABLE OPENING ADD CONSTRAINT O_C_SYS_C009164 CHECK (OPENING_STATUS_CODE IS NOT NULL);
ALTER TABLE OPENING ADD CONSTRAINT O_C_SYS_C009166 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE OPENING ADD CONSTRAINT O_C_SYS_C009168 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE OPENING ADD CONSTRAINT O_C_SYS_C009170 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE OPENING ADD CONSTRAINT O_C_SYS_C009172 CHECK (UPDATE_TIMESTAMP IS NOT NULL);
ALTER TABLE OPENING ADD CONSTRAINT O_C_SYS_C009174 CHECK (REVISION_COUNT IS NOT NULL);

-- Primary Key
ALTER TABLE OPENING ADD CONSTRAINT O_PK PRIMARY KEY (OPENING_ID);

-- Unique Index

-- Non-unique Indexes
CREATE INDEX O_LICENSEE_ID_I ON OPENING (LICENSEE_OPENING_ID);
CREATE INDEX O_OPENING_NUMBER_I ON OPENING (OPENING_NUMBER);
CREATE INDEX O_OPEN_CATEGORY_CODE_I ON OPENING (OPEN_CATEGORY_CODE);
CREATE INDEX O_OU_FK_I ON OPENING (ADMIN_DISTRICT_NO);
CREATE INDEX O_STATUS_I ON OPENING (OPENING_STATUS_CODE);

-- Foreign keys (to be added separately)
-- DDL migration for WASTE_BILLING_XREF (DBeaver style)
CREATE TABLE WASTE_BILLING_XREF (
    CATASTROPHIC_IND VARCHAR2(1) NOT NULL,
    SCALE_GRADE_CODE VARCHAR2(1) NOT NULL,
    WASTE_MATERIAL_KIND_CODE VARCHAR2(1) NOT NULL,
    WASTE_CLASS_CODE VARCHAR2(1) NOT NULL,
    WASTE_MATERIAL_CLASS_CODE VARCHAR2(1),
    BILLING_IND VARCHAR2(1) NOT NULL,
    CUT_CONTROL_IND VARCHAR2(1) NOT NULL,
    OTHER_IND VARCHAR2(1) NOT NULL
);

-- Explicit CHECK constraints
ALTER TABLE WASTE_BILLING_XREF ADD CONSTRAINT SYS_C0027847 CHECK (CATASTROPHIC_IND IS NOT NULL);
ALTER TABLE WASTE_BILLING_XREF ADD CONSTRAINT SYS_C0027848 CHECK (SCALE_GRADE_CODE IS NOT NULL);
ALTER TABLE WASTE_BILLING_XREF ADD CONSTRAINT SYS_C0027849 CHECK (WASTE_MATERIAL_KIND_CODE IS NOT NULL);
ALTER TABLE WASTE_BILLING_XREF ADD CONSTRAINT SYS_C0027850 CHECK (WASTE_CLASS_CODE IS NOT NULL);
ALTER TABLE WASTE_BILLING_XREF ADD CONSTRAINT SYS_C0027851 CHECK (BILLING_IND IS NOT NULL);
ALTER TABLE WASTE_BILLING_XREF ADD CONSTRAINT SYS_C0027852 CHECK (CUT_CONTROL_IND IS NOT NULL);
ALTER TABLE WASTE_BILLING_XREF ADD CONSTRAINT SYS_C0027854 CHECK (OTHER_IND IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_BILLING_XREF ADD CONSTRAINT WBX_PK PRIMARY KEY (CATASTROPHIC_IND, SCALE_GRADE_CODE, WASTE_MATERIAL_KIND_CODE, WASTE_CLASS_CODE);

-- Unique Index

-- Non-unique Indexes
CREATE INDEX WBX_WMCC_FK_I ON WASTE_BILLING_XREF (WASTE_MATERIAL_CLASS_CODE);
CREATE INDEX WBX_WMKC_FK_I ON WASTE_BILLING_XREF (WASTE_MATERIAL_KIND_CODE);
CREATE INDEX WBX_SGC_FK_I ON WASTE_BILLING_XREF (SCALE_GRADE_CODE);
CREATE INDEX WBX_WCC_FK_I ON WASTE_BILLING_XREF (WASTE_CLASS_CODE);

-- Foreign keys (to be added separately)
-- DDL migration for WASTE_T_DISTRIBUTION (DBeaver style)
CREATE TABLE WASTE_T_DISTRIBUTION (
    DEGREES_OF_FREEDOM NUMBER(5,0) NOT NULL,
    CONFIDENCE_INTERVAL NUMBER(8,3) NOT NULL,
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL
);

-- Explicit CHECK constraints
ALTER TABLE WASTE_T_DISTRIBUTION ADD CONSTRAINT SYS_C0027863 CHECK (DEGREES_OF_FREEDOM IS NOT NULL);
ALTER TABLE WASTE_T_DISTRIBUTION ADD CONSTRAINT SYS_C0027864 CHECK (CONFIDENCE_INTERVAL IS NOT NULL);
ALTER TABLE WASTE_T_DISTRIBUTION ADD CONSTRAINT SYS_C0027865 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE WASTE_T_DISTRIBUTION ADD CONSTRAINT SYS_C0027866 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE WASTE_T_DISTRIBUTION ADD CONSTRAINT SYS_C0027867 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE WASTE_T_DISTRIBUTION ADD CONSTRAINT SYS_C0027869 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE WASTE_T_DISTRIBUTION ADD CONSTRAINT SYS_C0027871 CHECK (UPDATE_TIMESTAMP IS NOT NULL);

-- Primary Key
ALTER TABLE WASTE_T_DISTRIBUTION ADD CONSTRAINT WTD_PK PRIMARY KEY (DEGREES_OF_FREEDOM);

-- Unique Index

-- No foreign keys found
-- DDL migration for ORG_UNIT (DBeaver style)
CREATE TABLE ORG_UNIT (
    ORG_UNIT_NO NUMBER(10,0) NOT NULL,
    ORG_UNIT_CODE VARCHAR2(6) NOT NULL,
    ORG_UNIT_NAME VARCHAR2(100) NOT NULL,
    LOCATION_CODE VARCHAR2(3) NOT NULL,
    AREA_CODE VARCHAR2(3) NOT NULL,
    TELEPHONE_NO VARCHAR2(7) NOT NULL,
    ORG_LEVEL_CODE VARCHAR2(1) NOT NULL,
    OFFICE_NAME_CODE VARCHAR2(2) NOT NULL,
    ROLLUP_REGION_NO NUMBER(10,0) NOT NULL,
    ROLLUP_REGION_CODE VARCHAR2(6) NOT NULL,
    ROLLUP_DIST_NO NUMBER(10,0) NOT NULL,
    ROLLUP_DIST_CODE VARCHAR2(6) NOT NULL,
    EFFECTIVE_DATE DATE NOT NULL,
    EXPIRY_DATE DATE NOT NULL,
    UPDATE_TIMESTAMP DATE
);

-- Explicit CHECK constraints
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019614 CHECK (ORG_UNIT_NO IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019615 CHECK (ORG_UNIT_CODE IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019616 CHECK (ORG_UNIT_NAME IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019617 CHECK (LOCATION_CODE IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019618 CHECK (AREA_CODE IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019619 CHECK (TELEPHONE_NO IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019620 CHECK (ORG_LEVEL_CODE IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019621 CHECK (OFFICE_NAME_CODE IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019622 CHECK (ROLLUP_REGION_NO IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019623 CHECK (ROLLUP_REGION_CODE IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019624 CHECK (ROLLUP_DIST_NO IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019625 CHECK (ROLLUP_DIST_CODE IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019626 CHECK (EFFECTIVE_DATE IS NOT NULL);
ALTER TABLE ORG_UNIT ADD CONSTRAINT SYS_C0019627 CHECK (EXPIRY_DATE IS NOT NULL);

-- Primary Key
ALTER TABLE ORG_UNIT ADD CONSTRAINT ORG_UNIT_PK PRIMARY KEY (ORG_UNIT_NO);

-- Unique Indexes
CREATE UNIQUE INDEX I8$_ORG_UNIT ON ORG_UNIT (ORG_UNIT_CODE);
CREATE UNIQUE INDEX I9$_ORG_UNIT ON ORG_UNIT (ORG_UNIT_NAME);
CREATE UNIQUE INDEX I1$_ORG_UNIT ON ORG_UNIT (LOCATION_CODE);
CREATE UNIQUE INDEX I2$_ORG_UNIT ON ORG_UNIT (AREA_CODE);
CREATE UNIQUE INDEX I3$_ORG_UNIT ON ORG_UNIT (TELEPHONE_NO);
CREATE UNIQUE INDEX I4$_ORG_UNIT ON ORG_UNIT (ROLLUP_REGION_CODE);

-- Non-unique Indexes
CREATE INDEX I5$_ORG_UNIT ON ORG_UNIT (ROLLUP_DIST_CODE);
CREATE INDEX I6$_ORG_UNIT ON ORG_UNIT (UPDATE_TIMESTAMP);
CREATE INDEX I7$_ORG_UNIT ON ORG_UNIT (ORG_LEVEL_CODE);

-- No foreign keys found
CREATE TABLE THE.CLIENT_LOCATION (
	CLIENT_NUMBER VARCHAR2(8) NOT NULL,
	CLIENT_LOCN_CODE VARCHAR2(2) NOT NULL,
	CLIENT_LOCN_NAME VARCHAR2(40) NULL,
	HDBS_COMPANY_CODE VARCHAR2(5) NULL,
	ADDRESS_1 VARCHAR2(40) NOT NULL,
	ADDRESS_2 VARCHAR2(40) NULL,
	ADDRESS_3 VARCHAR2(40) NULL,
	CITY VARCHAR2(30) NOT NULL,
	PROVINCE VARCHAR2(50) NULL,
	POSTAL_CODE VARCHAR2(10) NULL,
	COUNTRY VARCHAR2(50) NOT NULL,
	BUSINESS_PHONE VARCHAR2(10) NULL,
	HOME_PHONE VARCHAR2(10) NULL,
	CELL_PHONE VARCHAR2(10) NULL,
	FAX_NUMBER VARCHAR2(10) NULL,
	EMAIL_ADDRESS VARCHAR2(128) NULL,
	LOCN_EXPIRED_IND VARCHAR2(1) NOT NULL,
	RETURNED_MAIL_DATE DATE NULL,
	TRUST_LOCATION_IND VARCHAR2(1) NOT NULL,
	CLI_LOCN_COMMENT VARCHAR2(4000) NULL,
	UPDATE_TIMESTAMP DATE NOT NULL,
	UPDATE_USERID VARCHAR2(30) NOT NULL,
	UPDATE_ORG_UNIT NUMBER(10,0) NOT NULL,
	ADD_TIMESTAMP DATE NOT NULL,
	ADD_USERID VARCHAR2(30) NOT NULL,
	ADD_ORG_UNIT NUMBER(10,0) NOT NULL,
	REVISION_COUNT NUMBER(5,0) NOT NULL,
	CONSTRAINT "BIN$A8NnKNSZAszgVAAQ4CNh2g==$0" CHECK ("UPDATE_USERID" IS NOT NULL),
	CONSTRAINT "BIN$A8NnKNSaAszgVAAQ4CNh2g==$0" CHECK ("UPDATE_ORG_UNIT" IS NOT NULL),
	CONSTRAINT "BIN$A8NnKNSbAszgVAAQ4CNh2g==$0" CHECK ("ADD_TIMESTAMP" IS NOT NULL),
	CONSTRAINT "BIN$A8NnKNScAszgVAAQ4CNh2g==$0" CHECK ("ADD_USERID" IS NOT NULL),
	CONSTRAINT "BIN$A8NnKNSdAszgVAAQ4CNh2g==$0" CHECK ("ADD_ORG_UNIT" IS NOT NULL),
	CONSTRAINT "BIN$A8NnKNSeAszgVAAQ4CNh2g==$0" CHECK ("REVISION_COUNT" IS NOT NULL),
	CONSTRAINT CLIENT_LOCATION_PK PRIMARY KEY (CLIENT_NUMBER,CLIENT_LOCN_CODE),
	CONSTRAINT SYS_C0030524 CHECK ("CLIENT_NUMBER" IS NOT NULL),
	CONSTRAINT SYS_C0030525 CHECK ("CLIENT_LOCN_CODE" IS NOT NULL),
	CONSTRAINT SYS_C0030526 CHECK ("ADDRESS_1" IS NOT NULL),
	CONSTRAINT SYS_C0030527 CHECK ("CITY" IS NOT NULL),
	CONSTRAINT SYS_C0030528 CHECK ("COUNTRY" IS NOT NULL),
	CONSTRAINT SYS_C0030529 CHECK ("LOCN_EXPIRED_IND" IS NOT NULL),
	CONSTRAINT SYS_C0030530 CHECK ("TRUST_LOCATION_IND" IS NOT NULL),
	CONSTRAINT SYS_C0030531 CHECK ("UPDATE_TIMESTAMP" IS NOT NULL)
);
CREATE INDEX CL_FC_FK_I ON THE.CLIENT_LOCATION (CLIENT_NUMBER);
CREATE INDEX CL_OU_FK_I ON THE.CLIENT_LOCATION (UPDATE_ORG_UNIT);
CREATE INDEX CL_OU_IS_CREATED_BY_FK_I ON THE.CLIENT_LOCATION (ADD_ORG_UNIT);
CREATE INDEX "I2$_CLIENT_LOCATION" ON THE.CLIENT_LOCATION (HDBS_COMPANY_CODE);-- DDL migration for HAULING_AUTHORITY (DBeaver style)
CREATE TABLE HAULING_AUTHORITY (
    TIMBER_MARK VARCHAR2(6) NOT NULL,
    FOREST_FILE_ID VARCHAR2(10),
    MARKING_METHOD_CODE VARCHAR2(1),
    MARKING_INSTRUMENT_CODE VARCHAR2(1),
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    HAULING_AUTHORITY_GUID RAW(16) DEFAULT SYS_GUID() NOT NULL
);

-- Explicit CHECK constraints
ALTER TABLE HAULING_AUTHORITY ADD CONSTRAINT SYS_C0012855 CHECK (TIMBER_MARK IS NOT NULL);
ALTER TABLE HAULING_AUTHORITY ADD CONSTRAINT SYS_C0012856 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE HAULING_AUTHORITY ADD CONSTRAINT SYS_C0012857 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE HAULING_AUTHORITY ADD CONSTRAINT SYS_C0012858 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE HAULING_AUTHORITY ADD CONSTRAINT SYS_C0012859 CHECK (UPDATE_TIMESTAMP IS NOT NULL);
ALTER TABLE HAULING_AUTHORITY ADD CONSTRAINT SYS_C0012860 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE HAULING_AUTHORITY ADD CONSTRAINT SYS_C00111798 CHECK (HAULING_AUTHORITY_GUID IS NOT NULL);

-- Primary Key
ALTER TABLE HAULING_AUTHORITY ADD CONSTRAINT HAA_PK PRIMARY KEY (TIMBER_MARK);

-- Unique Indexes
CREATE UNIQUE INDEX HAA_GUID_UK ON HAULING_AUTHORITY (HAULING_AUTHORITY_GUID);

-- Non-unique Indexes
CREATE INDEX HAA_MICD_FK_I ON HAULING_AUTHORITY (MARKING_INSTRUMENT_CODE);
CREATE INDEX HAA_FF_I ON HAULING_AUTHORITY (FOREST_FILE_ID);
CREATE INDEX HAA_MMCD_FK_I ON HAULING_AUTHORITY (MARKING_METHOD_CODE);

-- Foreign keys (to be added separately)
-- DDL migration for PROV_FOREST_USE (DBeaver style)
CREATE TABLE PROV_FOREST_USE (
    FOREST_FILE_ID VARCHAR2(10) NOT NULL,
    FILE_STATUS_ST VARCHAR2(3),
    FILE_STATUS_DATE DATE,
    FILE_TYPE_CODE VARCHAR2(3),
    FOREST_REGION NUMBER(10,0) NOT NULL,
    BCTS_ORG_UNIT NUMBER(10,0),
    SB_FUNDED_IND VARCHAR2(1) DEFAULT 'N' NOT NULL,
    DISTRICT_ADMIN_ZONE VARCHAR2(4),
    MGMT_UNIT_TYPE VARCHAR2(1),
    MGMT_UNIT_ID VARCHAR2(4),
    REVISION_COUNT NUMBER(5,0) NOT NULL,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30) NOT NULL,
    UPDATE_TIMESTAMP DATE NOT NULL,
    FOREST_TENURE_GUID RAW(16) DEFAULT SYS_GUID() NOT NULL
);

-- Explicit CHECK constraints
ALTER TABLE PROV_FOREST_USE ADD CONSTRAINT SYS_C0012190 CHECK (FOREST_FILE_ID IS NOT NULL);
ALTER TABLE PROV_FOREST_USE ADD CONSTRAINT SYS_C0012191 CHECK (FOREST_REGION IS NOT NULL);
ALTER TABLE PROV_FOREST_USE ADD CONSTRAINT SYS_C0012192 CHECK (SB_FUNDED_IND IS NOT NULL);
ALTER TABLE PROV_FOREST_USE ADD CONSTRAINT AVCON_1148331360_SB_FU_001 CHECK (SB_FUNDED_IND IN ('N', 'Y'));
ALTER TABLE PROV_FOREST_USE ADD CONSTRAINT SYS_C0012193 CHECK (REVISION_COUNT IS NOT NULL);
ALTER TABLE PROV_FOREST_USE ADD CONSTRAINT SYS_C0012194 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE PROV_FOREST_USE ADD CONSTRAINT SYS_C0012195 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE PROV_FOREST_USE ADD CONSTRAINT SYS_C0012196 CHECK (UPDATE_USERID IS NOT NULL);
ALTER TABLE PROV_FOREST_USE ADD CONSTRAINT SYS_C0012197 CHECK (UPDATE_TIMESTAMP IS NOT NULL);
ALTER TABLE PROV_FOREST_USE ADD CONSTRAINT SYS_C00111802 CHECK (FOREST_TENURE_GUID IS NOT NULL);

-- Primary Key
ALTER TABLE PROV_FOREST_USE ADD CONSTRAINT PFU_PK PRIMARY KEY (FOREST_FILE_ID);

-- Unique Indexes
CREATE UNIQUE INDEX PFU_GUID_UK ON PROV_FOREST_USE (FOREST_TENURE_GUID);

-- Non-unique Indexes
CREATE INDEX PFU_FSC_FK_I ON PROV_FOREST_USE (FILE_STATUS_ST);
CREATE INDEX PFU_FTCD_FK_I ON PROV_FOREST_USE (FILE_TYPE_CODE);
CREATE INDEX PFU_I2 ON PROV_FOREST_USE (FOREST_REGION);
CREATE INDEX PFU_OU_FK_I ON PROV_FOREST_USE (BCTS_ORG_UNIT);

-- Foreign keys (to be added separately)
-- DDL migration for PIECE_SCALE_SUMMARY (DBeaver style)
CREATE TABLE PIECE_SCALE_SUMMARY (
    DOCUMENT_CONTROL_NUMBER NUMBER(10,0) NOT NULL,
    VERSION NUMBER(10,0) NOT NULL,
    PSSMRY_TYPE VARCHAR2(10) NOT NULL,
    LICENSE_NUMBER VARCHAR2(4),
    QUANT_LIC_TYPE_CD VARCHAR2(1),
    RETURN_NUMBER VARCHAR2(4),
    SCALE_SITE_ID_NMBR VARCHAR2(4) NOT NULL,
    SCALE_DATE DATE NOT NULL,
    TIMBER_MARK VARCHAR2(6),
    LOG_COUNT NUMBER(6,0) NOT NULL,
    CLIENT_NUMBER_PAID_BY VARCHAR2(8),
    CLIENT_LOCN_CODE_PAID_BY VARCHAR2(2),
    CLIENT_NUMBER_COPIED_TO VARCHAR2(8),
    CLIENT_LOCN_CODE_COPIED_TO VARCHAR2(2),
    SCL_RTN_VERSION_STATE_CODE VARCHAR2(3) NOT NULL,
    SCL_RTN_CATEGORY_CODE VARCHAR2(2) NOT NULL,
    INPUT_TIMBER_MARK VARCHAR2(6),
    INPUT_SCALER_LICENSE_NUM VARCHAR2(4),
    ACTIVE_VERSION_IND VARCHAR2(1) NOT NULL,
    QUEUED_FOR_PRINT_IND VARCHAR2(1) NOT NULL,
    VISIBILITY_IND VARCHAR2(1) NOT NULL,
    PLACE_OF_SCALE VARCHAR2(40),
    PENDING_TXN_COMMENT VARCHAR2(240),
    NUMBER_OF_CHAINS VARCHAR2(14),
    CAMP_BOOM_NUMBER VARCHAR2(18),
    AREA_CUT NUMBER(7,1),
    NUMBER_OF_SECTIONS NUMBER(3,1),
    PERIOD_START_DATE DATE,
    FIELD_SCALE_DECK_ID VARCHAR2(1),
    CUT_BLOCK_ID VARCHAR2(10),
    VERSION_COMMENT VARCHAR2(240),
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30),
    UPDATE_TIMESTAMP DATE
);

-- Explicit CHECK constraints
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024261 CHECK (DOCUMENT_CONTROL_NUMBER IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024262 CHECK (VERSION IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024263 CHECK (PSSMRY_TYPE IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024264 CHECK (SCALE_SITE_ID_NMBR IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024265 CHECK (SCALE_DATE IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024266 CHECK (LOG_COUNT IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024267 CHECK (SCL_RTN_VERSION_STATE_CODE IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024268 CHECK (SCL_RTN_CATEGORY_CODE IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024269 CHECK (ACTIVE_VERSION_IND IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024270 CHECK (QUEUED_FOR_PRINT_IND IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024271 CHECK (VISIBILITY_IND IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024272 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT SYS_C0024273 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT AVCON_1025734613_ACTIV_002 CHECK (ACTIVE_VERSION_IND IN ('Y', 'N'));
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT AVCON_1025734613_QUEUE_002 CHECK (QUEUED_FOR_PRINT_IND IN ('Y', 'N'));
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT AVCON_1025734613_VISIB_002 CHECK (VISIBILITY_IND IN ('Y', 'N'));

-- Primary Key
ALTER TABLE PIECE_SCALE_SUMMARY ADD CONSTRAINT PSSMRY_PK PRIMARY KEY (DOCUMENT_CONTROL_NUMBER, VERSION);

-- Unique Index

-- Non-unique Indexes
CREATE INDEX PSSMRY_SRCATCD_FK_I ON PIECE_SCALE_SUMMARY (SCL_RTN_CATEGORY_CODE);
CREATE INDEX PSSMRY_SRVERSTATE_FK_I ON PIECE_SCALE_SUMMARY (ACTIVE_VERSION_IND);
CREATE INDEX I2$_PIECE_SCALE_SUMMARY ON PIECE_SCALE_SUMMARY (DOCUMENT_CONTROL_NUMBER);
CREATE INDEX PSSMRY_HBSSR_FK_I ON PIECE_SCALE_SUMMARY (SCALE_SITE_ID_NMBR);
CREATE INDEX PSSMRY_MOF_CL_COPIED_TO_FK_I ON PIECE_SCALE_SUMMARY (CLIENT_NUMBER_COPIED_TO);
CREATE INDEX PSSMRY_MOF_CL_FK_I ON PIECE_SCALE_SUMMARY (CLIENT_NUMBER_PAID_BY);
CREATE INDEX PSSMRY_MOF_QL_FK_I ON PIECE_SCALE_SUMMARY (QUANT_LIC_TYPE_CD);
CREATE INDEX PSSMRY_MOF_TM_FK_I ON PIECE_SCALE_SUMMARY (TIMBER_MARK);

-- Foreign keys (to be added separately)
