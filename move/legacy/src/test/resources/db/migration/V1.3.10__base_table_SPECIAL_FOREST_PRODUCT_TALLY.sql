-- DDL migration for SPECIAL_FOREST_PRODUCT_TALLY (DBeaver style)
CREATE TABLE SPECIAL_FOREST_PRODUCT_TALLY (
    DETAIL_DOCUMENT_NUMBER VARCHAR2(13) NOT NULL,
    VERSION NUMBER(2,0) NOT NULL,
    BATDOC_ID NUMBER(32,0),
    SCL_RTN_VERSION_STATE_CODE VARCHAR2(3) NOT NULL,
    SCALE_EVENT_TYPE_CODE VARCHAR2(2) NOT NULL,
    HBS_SFP_SCALE_TYPE_CODE VARCHAR2(1) NOT NULL,
    SCALE_DATE DATE NOT NULL,
    SCALE_SITE_ID_NMBR VARCHAR2(4),
    CUT_BLOCK_ID VARCHAR2(10),
    TIMBER_MARK VARCHAR2(6),
    TIMBER_BRAND VARCHAR2(7),
    PRIMARY_QUANT_LIC_TYPE_CD VARCHAR2(1),
    PRIMARY_LICENSE_NUMBER VARCHAR2(4),
    SECONDARY_QUANT_LIC_TYPE_CD VARCHAR2(1),
    SECONDARY_LICENSE_NUMBER VARCHAR2(4),
    SIGNING_QUANT_LIC_TYPE_CD VARCHAR2(1),
    SIGNING_LICENSE_NUMBER VARCHAR2(4),
    RETURN_NUMBER NUMBER(4,0) NOT NULL,
    LOG_COUNT NUMBER(4,0) NOT NULL,
    NET_VOLUME NUMBER(7,3),
    PARCEL_COUNT NUMBER(1,0),
    PARCEL_IDENTIFIER NUMBER(1,0),
    VOLUME_CALC_METHOD_TYPE VARCHAR2(1),
    ORIG_CHK_SCL_QUANT_LIC_TYPE_CD VARCHAR2(1),
    ORIG_CHK_SCL_LICENSE_NUMBER VARCHAR2(4),
    ORIG_CHK_SCL_RETURN_NUMBER VARCHAR2(4),
    ORIGINAL_VERSION_IND VARCHAR2(1) NOT NULL,
    VALID_SIGNATURE_IND VARCHAR2(1) NOT NULL,
    ACTIVE_VERSION_IND VARCHAR2(1) NOT NULL,
    SAMPLE_PIECE_COUNT NUMBER(4,0),
    CHECK_REPLACES_ORIGINAL_IND VARCHAR2(1),
    FIELD_SCALE_DECK_ID VARCHAR2(1),
    FIELD_SCALE_IND VARCHAR2(1),
    TRANSPORT_IDENTIFIER VARCHAR2(16),
    INCOMING_LDS_NUMBER VARCHAR2(10),
    LOAD_ARRIVAL_NUMBER VARCHAR2(10),
    SFP_TALLY_COMMENT VARCHAR2(240),
    DTL_DOC_SEQ NUMBER(32,0) NOT NULL,
    INPUT_CUT_BLOCK_ID VARCHAR2(10),
    INPUT_SCALE_SITE VARCHAR2(4),
    INPUT_SOURCE VARCHAR2(7),
    INPUT_PRIMARY_SCALER_LIC VARCHAR2(4),
    INPUT_SECONDARY_SCALER_LIC VARCHAR2(4),
    INPUT_SIGNING_SCALER_LIC VARCHAR2(4),
    INPUT_ORIG_CHK_SCL_SCALER_LIC VARCHAR2(4),
    ENCRYPTED_SIGNATURE RAW(512),
    HBS_ENCR_KEY_ID NUMBER(2,0),
    INPUT_HBS_ENCR_KEY_ID NUMBER(2,0),
    HBS_RSA_PADDING_ID NUMBER(2,0),
    DECRYPTED_SIGNATURE VARCHAR2(128),
    HASH_TOTAL VARCHAR2(128),
    HBS_CRYPT_METHOD_ID NUMBER(2,0),
    SIGNING_DATE_TIME DATE,
    ENTRY_USERID VARCHAR2(30) NOT NULL,
    ENTRY_TIMESTAMP DATE NOT NULL,
    UPDATE_USERID VARCHAR2(30),
    UPDATE_TIMESTAMP DATE
);

-- Explicit CHECK constraints
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017706 CHECK (DETAIL_DOCUMENT_NUMBER IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017707 CHECK (VERSION IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017708 CHECK (SCL_RTN_VERSION_STATE_CODE IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017709 CHECK (SCALE_EVENT_TYPE_CODE IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017710 CHECK (HBS_SFP_SCALE_TYPE_CODE IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017711 CHECK (SCALE_DATE IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017712 CHECK (RETURN_NUMBER IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017713 CHECK (LOG_COUNT IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017714 CHECK (ORIGINAL_VERSION_IND IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017715 CHECK (VALID_SIGNATURE_IND IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017716 CHECK (ACTIVE_VERSION_IND IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017717 CHECK (DTL_DOC_SEQ IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017718 CHECK (ENTRY_USERID IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0017719 CHECK (ENTRY_TIMESTAMP IS NOT NULL);
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0039138 CHECK (ACTIVE_VERSION_IND IN ('Y', 'N'));
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0039139 CHECK (CHECK_REPLACES_ORIGINAL_IND IN ('Y', 'N'));
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0039140 CHECK (ORIGINAL_VERSION_IND IN ('Y', 'N'));
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SYS_C0039141 CHECK (VOLUME_CALC_METHOD_TYPE IN ('G', 'N'));

-- Primary Key
ALTER TABLE SPECIAL_FOREST_PRODUCT_TALLY ADD CONSTRAINT SFPTALLY_PK PRIMARY KEY (DETAIL_DOCUMENT_NUMBER, VERSION);

-- Unique Index

-- Non-unique Indexes
CREATE INDEX SFPTALLY_SECONDARY_QL_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (SECONDARY_QUANT_LIC_TYPE_CD);
CREATE INDEX SFPTALLY_SIGNING_QL_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (SIGNING_QUANT_LIC_TYPE_CD);
CREATE INDEX SFPTALLY_PRIMARY_QL_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (PRIMARY_QUANT_LIC_TYPE_CD);
CREATE INDEX SFPTALLY_BATDOC_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (BATDOC_ID);
CREATE INDEX SFPTALLY_MOF_TM_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (TIMBER_MARK);
CREATE INDEX SFPTALLY_MOF_SS_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (SCALE_SITE_ID_NMBR);
CREATE INDEX SFPTALLY_MOF_CB_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (CUT_BLOCK_ID);
CREATE INDEX SFPTALLY_DTLSCLDOC_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (DTL_DOC_SEQ);
CREATE INDEX SFPTALLY_ORIG_CHK_SCL_QL_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (ORIG_CHK_SCL_QUANT_LIC_TYPE_CD);
CREATE INDEX SFPTALLY_HRPS_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (HBS_RSA_PADDING_ID);
CREATE INDEX SFPTALLY_HCM_FK_I ON SPECIAL_FOREST_PRODUCT_TALLY (HBS_CRYPT_METHOD_ID);
CREATE INDEX SFPTALLY_HEK_FK1_I ON SPECIAL_FOREST_PRODUCT_TALLY (HBS_ENCR_KEY_ID);

-- Foreign keys (to be added separately)