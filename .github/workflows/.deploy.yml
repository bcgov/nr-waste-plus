name: .Deploys

on:
  workflow_call:
    inputs:
      ### Required
      # Nothing! Only `secrets: inherit` is required

      ### Typical / recommended
      configmap-backend:
        description: Configuration map for application.yml
        required: true
        type: string
      configmap-frontend:
        description: Configuration map for params.js
        required: true
        type: string
        default: ''
      environment:
        description: GitHub/OpenShift environment; usually PR number, test or prod
        default: ''
        type: string
      oracledb-port:
        description: Oracle database port
        default: '1543'
        type: string
      oracledb-servicename:
        description: Oracle service name
        required: false
        type: string
      oracledb-username:
        description: Oracle username
        required: false
        type: string
      target:
        description: Deployment target; usually PR number, test or prod
        default: ${{ github.event.number }}
        required: false
        type: string
      url:
        description: Frontend URL; omit for PRs
        default: ${{ github.event.repository.name }}-$((${{ github.event.number }} % 50))-frontend.apps.silver.devops.gov.bc.ca
        required: false
        type: string

permissions: {}

jobs:
  vars:
    name: Variables
    runs-on: ubuntu-24.04
    outputs:
      tag: ${{ steps.pr.outputs.pr }}
    steps:
      # Get PR number for squash merges to main
      - name: PR Number
        id: pr
        uses: bcgov/action-get-pr@21f9351425cd55a98e869ee28919a512aa30647d # v0.0.1

  init:
    name: Deploy (init)
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-24.04
    steps:
      - name: Deployment Init
        uses: bcgov/action-deployer-openshift@d972993c70aba88e4f2fe66a66c4b7149fa9fcad # v4.0.0
        with:
          file: common/openshift.init.yml
          oc_namespace: ${{ secrets.OC_NAMESPACE }}
          oc_server: ${{ secrets.oc_server }}
          oc_token: ${{ secrets.oc_token }}
          overwrite: true
          parameters:
            -p ZONE=${{ inputs.target }}
            -p ORACLEDB_USER=${{ inputs.oracledb-username || secrets.ORACLEDB_USERNAME }}
            -p ORACLEDB_PASSWORD=${{ secrets.ORACLEDB_PASSWORD }}
            -p ORACLEDB_DATABASE=${{ secrets.ORACLEDB_DATABASE }}
            -p ORACLEDB_HOST=${{ secrets.ORACLEDB_HOST }}
            -p ORACLEDB_SERVICENAME=${{ inputs.oracledb-servicename || secrets.ORACLEDB_SERVICENAME }}
            -p ORACLEDB_SECRET=${{ secrets.ORACLEDB_SECRET }}            
            -p COGNITO_CLIENT_ID=${{ secrets.COGNITO_CLIENT_ID }}
            -p COGNITO_ENVIRONMENT=${{ inputs.environment || 'dev' }}
            -p COGNITO_USER_POOL=${{ secrets.COGNITO_USER_POOL }}
            -p VITE_NODE_ENV=openshift-${{ inputs.target }}
            -p URL_FRONTEND=${{ inputs.url }}
            -p LANDING_URL=${{ inputs.url }}
            -p DB_PASSWORD=${{ secrets.DB_PASSWORD }}
            -p SPRING_PROFILES_ACTIVE=${{ secrets.OC_NAMESPACE }}
            -p VITE_APP_NAME=Waste Plus
            -p VITE_FEATURES_OFFLINE=true
            -p VITE_ZONE=${{ inputs.environment || 'dev' }}
            -p VITE_LEGACY_BASE_URL=${{ secrets.GREEN_DOMAIN }}
            -p CLIENT_BASE_URL=${{ secrets.CLIENT_API_URL }}
            -p CLIENT_BASE_KEY=${{ secrets.CLIENT_API_KEY }}
            -p VITE_CLIENT_BASE_URL=${{ secrets.CLIENT_APP_URL }}

  deploy:
    name: Deploy
    needs: [init, vars]
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-24.04
    timeout-minutes: 20
    strategy:
      matrix:
        name: [database, legacy, backend, frontend]
        include:
          - name: database
            overwrite: false
          - name: legacy
            parameters:
              -p ORACLEDB_PORT=${{ inputs.oracledb-port }}
          - name: backend
            parameters:
              -p FRONTEND_URL=${{ inputs.url }}
              -p CONFIG_MAP="${{ inputs.configmap-backend }}"
            verification_path: health
          - name: frontend
            parameters:
              -p URL=${{ inputs.url }}
              -p CONFIG_MAP="${{ inputs.configmap-frontend }}"
    steps:
      - uses: bcgov/action-deployer-openshift@d972993c70aba88e4f2fe66a66c4b7149fa9fcad # v4.0.0
        id: deploys
        with:
          file: ${{ matrix.name }}/openshift.deploy.yml
          oc_namespace: ${{ secrets.oc_namespace }}
          oc_server: ${{ secrets.oc_server }}
          oc_token: ${{ secrets.oc_token }}
          overwrite: ${{ matrix.overwrite }}
          parameters:
            -p TAG=${{ needs.vars.outputs.tag }}
            -p ZONE=${{ inputs.target }}
            ${{ matrix.parameters }}
